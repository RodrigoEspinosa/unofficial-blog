{"ast":null,"code":"var _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/episodes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episodes = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}, \"Seasons!\"), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }\n}, props.seasons.map(season => __jsx(\"li\", {\n  key: season.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 17\n  }\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${season.number}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 21\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 25\n  }\n}, \"Season \", season.number, \"........\", season.premiereDate, \" - \", season.endDate))))));\n\nEpisodes.getInitialProps = async function () {\n  const res = await fetch('http://api.tvmaze.com/shows/385/seasons');\n  const data = await res.json();\n  return {\n    seasons: data.map(entry => entry)\n  };\n};\n\nexport default Episodes;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/episodes.js"],"names":["Link","Layout","fetch","Episodes","props","seasons","map","season","id","number","premiereDate","endDate","getInitialProps","res","data","json","entry"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IACrB;AAAI,EAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,MAAM,CAACE,MAAO,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWF,MAAM,CAACE,MAAlB,cAAkCF,MAAM,CAACG,YAAzC,SAA0DH,MAAM,CAACI,OAAjE,CADJ,CADJ,CADH,CADL,CAFJ,CADJ;;AAgBAR,QAAQ,CAACS,eAAT,GAA2B,kBAAkB;AACzC,QAAMC,GAAG,GAAG,MAAMX,KAAK,CAAC,yCAAD,CAAvB;AACA,QAAMY,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEA,SAAO;AACHV,IAAAA,OAAO,EAAES,IAAI,CAACR,GAAL,CAASU,KAAK,IAAIA,KAAlB;AADN,GAAP;AAGH,CAPD;;AASA,eAAeb,QAAf","sourcesContent":["import Link from 'next/link';\nimport Layout from '../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episodes = props => (\n    <Layout>\n        <h1>Seasons!</h1>\n        <ul>\n            {props.seasons.map(season => (\n                <li key={season.id} >\n                    <Link href=\"/p/[id]\" as={`/p/${season.number}`}>\n                        <a>Season {season.number}........{season.premiereDate} - {season.endDate}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n\n    </Layout>\n);\n\nEpisodes.getInitialProps = async function () {\n    const res = await fetch('http://api.tvmaze.com/shows/385/seasons');\n    const data = await res.json();\n\n    return {\n        seasons: data.map(entry => entry)\n    };\n};\n\nexport default Episodes"]},"metadata":{},"sourceType":"module"}