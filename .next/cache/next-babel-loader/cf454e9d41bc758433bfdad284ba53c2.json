{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../../components/MyLayout';\n\nconst Cast = props => __jsx(Layout, null, __jsx(\"div\", {\n  className: \"container\"\n}, __jsx(\"h1\", {\n  className: \"title\"\n}, props.show.name, \"'s Unofficial Blog\"), __jsx(\"ul\", {\n  className: \"list\"\n}, __jsx(\"h2\", null, \"Cast\"), props.cast.map(person => __jsx(\"li\", {\n  key: person.person.id\n}, __jsx(Link, {\n  href: \"/cast/person/[id]\",\n  as: `/cast/person/${person.person.id}`\n}, __jsx(\"a\", null, person.person.name, \"........\", person.character.name)), __jsx(\"div\", {\n  className: \"characterImg\"\n}, person.character.image ? __jsx(\"img\", {\n  src: person.character.image.original\n}) : __jsx(\"noimg\", null))))), __jsx(\"div\", {\n  className: \"img\"\n}, props.show.image ? __jsx(\"img\", {\n  src: props.show.image.original\n}) : __jsx(\"noimg\", null))), __jsx(\"style\", null, `\n\n        .characterImg > img {\n            object-fit: cover;\n           max-height: 10vh;         \n    }\n           .title {\n            grid-column-start: 1;\n            grid-column-end: 5;\n            grid-row-start: 1;\n            grid-row-end: 2;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-bottom: 0px;\n        }\n        .list {\n            grid-column-start: 2;\n            grid-column-end: 3;\n            grid-row-start: 2;\n            grid-row-end: 5;\n            margin: 0;\n                padding: 0;\n                align-items: center;\n                justify-content: center;\n                text-align: center\n\n        }\n        li {\n            list-style-type: none;\n                height: 10vh;\n                display: flex;\n                align-items: center;\n                padding-left: 2vw;\n                justify-content: space-between;\n                border: 1px solid #DDD;\n        }\n        .img {\n            grid-column-start: 3;\n                grid-column-end: 5;\n                grid-row-start: 2;\n                grid-row-end: 5;\n                justify-self: center;\n                margin-top: 7vh;\n        }\n        .img > img {\n            object-fit: cover;\n           max-height: 100%;         \n    }\n        .container {\n            padding-top: 15px;\n            justify-content: stretch;   \n            align-content: stretch;     \n            display: grid;\n            grid-template-columns: 7vw 35vw 20vw 20vw ;\n            grid-template-rows: 10vh 40vh 40vh 25vh;\n            margin-left: 6%; \n            margin-right: 6%;      \n         }\n         @media (max-width: 800px){\n            Layout {\n                font-size: 10px;\n            }\n            .characterImg > img {\n                object-fit: cover;\n               max-height: 5vh;         \n        }\n            .container {\n                padding-top: 15px;\n                justify-content: stretch;   \n                align-content: stretch;     \n                display: grid;\n                grid-template-columns: 20vw 20vw 20vw 20vw ;\n                grid-template-rows: 8vh 25vh 20vh 19vh;\n                margin-left: 9%; \n                margin-right: 9%;\n                font-size: 9px;     \n             }\n             .img {\n                grid-column-start: 1;\n                grid-column-end: 5;\n                grid-row-start: 2;\n                grid-row-end: 3;\n                justify-self: center;\n                margin: 0;\n            }\n            .list {\n                grid-column-start: 1;\n                grid-column-end: 5;\n                grid-row-start: 3;\n                grid-row-end: 5;       \n            }\n            li {\n                list-style-type: none;\n                height: 5vh;\n                text-align: left;\n            }\n\n          }\n       `));\n\nCast.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const [show, data] = await Promise.all([fetch(`https://api.tvmaze.com/shows/${id}`).then(r => r.json()), fetch(`https://api.tvmaze.com/shows/${id}/cast`).then(r => r.json())]);\n  return {\n    show,\n    cast: data.map(entry => entry)\n  };\n};\n\nexport default Cast;","map":null,"metadata":{},"sourceType":"module"}