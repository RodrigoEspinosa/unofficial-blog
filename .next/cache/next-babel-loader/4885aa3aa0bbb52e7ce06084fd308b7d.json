{"ast":null,"code":"var _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/cast/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../../components/MyLayout';\n\nconst Cast = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  className: \"jsx-970752395\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}, \"Cast\"), __jsx(\"ul\", {\n  className: \"jsx-970752395\" + \" \" + \"castList\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }\n}, props.cast.map(person => __jsx(\"li\", {\n  key: person.person.id,\n  className: \"jsx-970752395\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 17\n  }\n}, __jsx(Link, {\n  href: \"/cast/person/[id]\",\n  as: `/cast/person/${person.person.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 21\n  }\n}, __jsx(\"a\", {\n  className: \"jsx-970752395\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 25\n  }\n}, person.person.name, \"........\", person.character.name))))), __jsx(_JSXStyle, {\n  id: \"970752395\",\n  __self: this\n}, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXNtYXJ0aW4vRG9jdW1lbnRzL0NvZGluZy9tYWQtbWVuLWJsb2cvcGFnZXMvY2FzdC9baWRdLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdCb0IiLCJmaWxlIjoiL1VzZXJzL2FuZHJlc21hcnRpbi9Eb2N1bWVudHMvQ29kaW5nL21hZC1tZW4tYmxvZy9wYWdlcy9jYXN0L1tpZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi8uLi9jb21wb25lbnRzL015TGF5b3V0JztcblxuY29uc3QgQ2FzdCA9IHByb3BzID0+IChcblxuICAgIDxMYXlvdXQ+XG4gICAgICAgIDxoMT5DYXN0PC9oMT5cbiAgICAgICAgPHVsIGNsYXNzTmFtZT1cImNhc3RMaXN0XCI+XG4gICAgICAgICAgICB7cHJvcHMuY2FzdC5tYXAocGVyc29uID0+IChcbiAgICAgICAgICAgICAgICA8bGkga2V5PXtwZXJzb24ucGVyc29uLmlkfSA+XG4gICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvY2FzdC9wZXJzb24vW2lkXVwiIGFzPXtgL2Nhc3QvcGVyc29uLyR7cGVyc29uLnBlcnNvbi5pZH1gfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhPntwZXJzb24ucGVyc29uLm5hbWV9Li4uLi4uLi57cGVyc29uLmNoYXJhY3Rlci5uYW1lfTwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgPC91bD5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgLmNhc3RMaXN0IHtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgIGB9XG5cbiAgICAgICAgPC9zdHlsZT5cblxuICAgIDwvTGF5b3V0PlxuKTtcblxuQ2FzdC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgIGNvbnN0IHsgaWQgfSA9IGNvbnRleHQucXVlcnk7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2hvd3MvJHtpZH0vY2FzdGApO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgY2FzdDogZGF0YS5tYXAoZW50cnkgPT4gZW50cnkpXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhc3Q7Il19 */\\n/*@ sourceURL=/Users/andresmartin/Documents/Coding/mad-men-blog/pages/cast/[id].js */\"));\n\nCast.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}/cast`);\n  const data = await res.json();\n  return {\n    cast: data.map(entry => entry)\n  };\n};\n\nexport default Cast;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/cast/[id].js"],"names":["Link","Layout","Cast","props","cast","map","person","id","name","character","getInitialProps","context","query","res","fetch","data","json","entry"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAEd,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAA,qCAAc,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAeC,MAAM,IAClB;AAAI,EAAA,GAAG,EAAEA,MAAM,CAACA,MAAP,CAAcC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,mBAAX;AAA+B,EAAA,EAAE,EAAG,gBAAeD,MAAM,CAACA,MAAP,CAAcC,EAAG,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,MAAM,CAACA,MAAP,CAAcE,IAAlB,cAAgCF,MAAM,CAACG,SAAP,CAAiBD,IAAjD,CADJ,CADJ,CADH,CADL,CAFJ;AAAA;AAAA;AAAA,usDAFJ;;AAwBAN,IAAI,CAACQ,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC5C,QAAM;AAAEJ,IAAAA;AAAF,MAASI,OAAO,CAACC,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,gCAA+BP,EAAG,OAApC,CAAvB;AACA,QAAMQ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,SAAO;AACHZ,IAAAA,IAAI,EAAEW,IAAI,CAACV,GAAL,CAASY,KAAK,IAAIA,KAAlB;AADH,GAAP;AAGH,CARD;;AAUA,eAAef,IAAf","sourcesContent":["import Link from 'next/link';\nimport Layout from '../../components/MyLayout';\n\nconst Cast = props => (\n\n    <Layout>\n        <h1>Cast</h1>\n        <ul className=\"castList\">\n            {props.cast.map(person => (\n                <li key={person.person.id} >\n                    <Link href=\"/cast/person/[id]\" as={`/cast/person/${person.person.id}`}>\n                        <a>{person.person.name}........{person.character.name}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n        <style jsx>{`\n            .castList {\n              \n            }\n        `}\n\n        </style>\n\n    </Layout>\n);\n\nCast.getInitialProps = async function (context) {\n    const { id } = context.query;\n    const res = await fetch(`https://api.tvmaze.com/shows/${id}/cast`);\n    const data = await res.json();\n\n    return {\n        cast: data.map(entry => entry)\n    };\n};\n\nexport default Cast;"]},"metadata":{},"sourceType":"module"}