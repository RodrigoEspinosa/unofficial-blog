{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/crew/[id].js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Cast = function Cast(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3567068984\" + \" \" + \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-3567068984\" + \" \" + \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, props.show.name, \"'s Unofficial Blog\"), __jsx(\"div\", {\n    className: \"jsx-3567068984\" + \" \" + \"list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-3567068984\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \"Crew\"), props.crew.length > 0 ? __jsx(\"ul\", {\n    className: \"jsx-3567068984\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 42\n    }\n  }, props.crew.map(function (person) {\n    return __jsx(\"li\", {\n      key: person.person.id,\n      className: \"jsx-3567068984\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }\n    }, __jsx(Link, {\n      href: \"/crew/person/[id]\",\n      as: \"/crew/person/\".concat(person.person.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 29\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-3567068984\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 33\n      }\n    }, person.type, \"........\", person.person.name)));\n  })) : __jsx(\"p\", {\n    className: \"jsx-3567068984\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, \"OMG! We don't seem to have this information... This is really embarrassing.\")), __jsx(\"div\", {\n    className: \"jsx-3567068984\" + \" \" + \"img\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, props.show.image ? __jsx(\"img\", {\n    src: props.show.image.original,\n    className: \"jsx-3567068984\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 54\n    }\n  }) : __jsx(\"div\", {\n    className: \"jsx-3567068984\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 96\n    }\n  }))), __jsx(_JSXStyle, {\n    id: \"3567068984\",\n    __self: _this\n  }, \".title.jsx-3567068984{grid-column-start:1;grid-column-end:5;grid-row-start:1;grid-row-end:2;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0px;}.list.jsx-3567068984{grid-column-start:2;grid-column-end:3;grid-row-start:2;grid-row-end:5;margin:0;padding:0;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;}li.jsx-3567068984{list-style-type:none;height:10vh;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-left:2vw;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;border:1px solid #DDD;}.img.jsx-3567068984{grid-column-start:3;grid-column-end:5;grid-row-start:2;grid-row-end:5;justify-self:center;margin-top:7vh;margin-left:5vw;}.img.jsx-3567068984 img.jsx-3567068984{object-fit:cover;max-height:100%;}.container.jsx-3567068984{padding-top:15px;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch;-webkit-align-content:stretch;-ms-flex-line-pack:stretch;align-content:stretch;display:grid;grid-template-columns:7vw 35vw 20vw 20vw;grid-template-rows:10vh 40vh 30vh 15vh;margin-left:6%;margin-right:6%;}@media (max-width:800px){.characterImg.jsx-3567068984 img.jsx-3567068984{object-fit:cover;max-height:5vh;}.container.jsx-3567068984{padding-top:15px;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch;-webkit-align-content:stretch;-ms-flex-line-pack:stretch;align-content:stretch;display:grid;grid-template-columns:20vw 20vw 20vw 20vw;grid-template-rows:12vh 25vh 20vh 19vh;margin-left:9%;margin-right:9%;font-size:9px;}.img.jsx-3567068984{grid-column-start:1;grid-column-end:5;grid-row-start:2;grid-row-end:3;justify-self:center;margin:0;}.list.jsx-3567068984{grid-column-start:1;grid-column-end:5;grid-row-start:3;grid-row-end:5;}li.jsx-3567068984{list-style-type:none;height:5vh;text-align:left;}.title.jsx-3567068984{text-align:center;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXNtYXJ0aW4vRG9jdW1lbnRzL0NvZGluZy9tYWQtbWVuLWJsb2cvcGFnZXMvY3Jldy9baWRdLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlCb0IsQUFJaUMsQUFVQSxBQVlDLEFBU0QsQUFTSCxBQUlBLEFBWUksQUFJQSxBQVdHLEFBUUEsQUFNQyxBQUtILGlCQWpEUCxBQUlTLEFBWU4sQUFJVSxDQThCNUIsRUExRmtCLEFBVUEsQUFxQkksQUF3Q0EsQUFRQSxDQXpETixBQStERCxXQTVCbkIsQUE2QndCLENBL0RILEFBa0J6QixLQXhDeUIsQUFVQSxBQXFCSSxBQXdDQSxBQVFBLFVBT3JCLE9BckZlLEFBVUEsQUFxQkksQUF3Q0EsQUFRQSxlQTlFTixBQVVKLEFBcUJlLEFBd0NBLEFBUXhCLFNBcEVjLFVBQ1MsQ0FvQkosQUF3Q04sU0FDYixNQXhDb0IsRUFaRyxhQXFCRCxBQWdCSSxDQXhCOUIsdUJBakN1QixzQ0FZUSxpQkE4QmQsQUFnQkksQ0FyQ0ksWUFzQnFCLEFBZ0JLLEtBckNiLG9CQXJCWCxnQkEyQ2dCLENBZ0JJLDJCQTdDaEQsV0E4Qm9CLENBZ0JJLE1BOUN2QixRQStCb0IsQ0FnQkksZUFmdkIsQ0FnQnFCLFFBeENRLElBckJSLEVBOERqQixnQkE3REwsQUFxQkEiLCJmaWxlIjoiL1VzZXJzL2FuZHJlc21hcnRpbi9Eb2N1bWVudHMvQ29kaW5nL21hZC1tZW4tYmxvZy9wYWdlcy9jcmV3L1tpZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi8uLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuXG5jb25zdCBDYXN0ID0gcHJvcHMgPT4gKFxuXG4gICAgPExheW91dD5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgICAgICAgIDxoMSBjbGFzc05hbWU9XCJ0aXRsZVwiPntwcm9wcy5zaG93Lm5hbWV9J3MgVW5vZmZpY2lhbCBCbG9nPC9oMT5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaXN0XCI+XG4gICAgICAgICAgICAgICAgPGgyPkNyZXc8L2gyPlxuICAgICAgICAgICAgICAgIHtwcm9wcy5jcmV3Lmxlbmd0aCA+IDAgPyA8dWw+XG4gICAgICAgICAgICAgICAgICAgIHtwcm9wcy5jcmV3Lm1hcChwZXJzb24gPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGtleT17cGVyc29uLnBlcnNvbi5pZH0gPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvY3Jldy9wZXJzb24vW2lkXVwiIGFzPXtgL2NyZXcvcGVyc29uLyR7cGVyc29uLnBlcnNvbi5pZH1gfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGE+e3BlcnNvbi50eXBlfS4uLi4uLi4ue3BlcnNvbi5wZXJzb24ubmFtZX08L2E+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAgPC91bD4gOiA8cD5PTUchIFdlIGRvbid0IHNlZW0gdG8gaGF2ZSB0aGlzIGluZm9ybWF0aW9uLi4uIFRoaXMgaXMgcmVhbGx5IGVtYmFycmFzc2luZy48L3A+fVxuXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW1nXCI+e3Byb3BzLnNob3cuaW1hZ2UgPyA8aW1nIHNyYz17cHJvcHMuc2hvdy5pbWFnZS5vcmlnaW5hbH0gLz4gOiA8ZGl2IC8+fTwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuXG4gICAgICAgICAgIC50aXRsZSB7XG4gICAgICAgICAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcbiAgICAgICAgICAgIGdyaWQtY29sdW1uLWVuZDogNTtcbiAgICAgICAgICAgIGdyaWQtcm93LXN0YXJ0OiAxO1xuICAgICAgICAgICAgZ3JpZC1yb3ctZW5kOiAyO1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICAgICAgfVxuICAgICAgICAubGlzdCB7XG4gICAgICAgICAgICBncmlkLWNvbHVtbi1zdGFydDogMjtcbiAgICAgICAgICAgIGdyaWQtY29sdW1uLWVuZDogMztcbiAgICAgICAgICAgIGdyaWQtcm93LXN0YXJ0OiAyO1xuICAgICAgICAgICAgZ3JpZC1yb3ctZW5kOiA1O1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAgICAgICB9XG4gICAgICAgIGxpIHtcbiAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwdmg7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMnZ3O1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjREREO1xuICAgICAgICB9XG4gICAgICAgIC5pbWcge1xuICAgICAgICAgICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDM7XG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW4tZW5kOiA1O1xuICAgICAgICAgICAgICAgIGdyaWQtcm93LXN0YXJ0OiAyO1xuICAgICAgICAgICAgICAgIGdyaWQtcm93LWVuZDogNTtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA3dmg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDV2dztcbiAgICAgICAgfVxuICAgICAgICAuaW1nIGltZyB7XG4gICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgICAgbWF4LWhlaWdodDogMTAwJTsgICAgICAgICBcbiAgICB9XG4gICAgICAgIC5jb250YWluZXIge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6IDE1cHg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0cmV0Y2g7ICAgXG4gICAgICAgICAgICBhbGlnbi1jb250ZW50OiBzdHJldGNoOyAgICAgXG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA3dncgMzV2dyAyMHZ3IDIwdncgO1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxMHZoIDQwdmggMzB2aCAxNXZoO1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDYlOyBcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNiU7ICAgICAgXG4gICAgICAgICB9XG4gICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpe1xuXG4gICAgICAgICAgICAuY2hhcmFjdGVySW1nIGltZyB7XG4gICAgICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA1dmg7ICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgICAgIC5jb250YWluZXIge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAxNXB4O1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3RyZXRjaDsgICBcbiAgICAgICAgICAgICAgICBhbGlnbi1jb250ZW50OiBzdHJldGNoOyAgICAgXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDIwdncgMjB2dyAyMHZ3IDIwdncgO1xuICAgICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMTJ2aCAyNXZoIDIwdmggMTl2aDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogOSU7IFxuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogOSU7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA5cHg7ICAgICBcbiAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgLmltZyB7XG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW4tZW5kOiA1O1xuICAgICAgICAgICAgICAgIGdyaWQtcm93LXN0YXJ0OiAyO1xuICAgICAgICAgICAgICAgIGdyaWQtcm93LWVuZDogMztcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAubGlzdCB7XG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW4tZW5kOiA1O1xuICAgICAgICAgICAgICAgIGdyaWQtcm93LXN0YXJ0OiAzO1xuICAgICAgICAgICAgICAgIGdyaWQtcm93LWVuZDogNTsgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgICAgICAgICAgICAgIGhlaWdodDogNXZoO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAudGl0bGUge1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH1cbiAgICAgICAgYH1cblxuICAgICAgICA8L3N0eWxlPlxuICAgIDwvTGF5b3V0PlxuKTtcblxuQ2FzdC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgIGNvbnN0IHsgaWQgfSA9IGNvbnRleHQucXVlcnk7XG4gICAgY29uc3QgW3Nob3csIGRhdGFdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zaG93cy8ke2lkfWApLnRoZW4ociA9PiByLmpzb24oKSksXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS50dm1hemUuY29tL3Nob3dzLyR7aWR9L2NyZXdgKS50aGVuKHIgPT4gci5qc29uKCkpLFxuICAgIF0pXG5cbiAgICByZXR1cm4ge1xuICAgICAgICBzaG93LFxuICAgICAgICBjcmV3OiBkYXRhLm1hcChlbnRyeSA9PiBlbnRyeSlcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FzdDsiXX0= */\\n/*@ sourceURL=/Users/andresmartin/Documents/Coding/mad-men-blog/pages/crew/[id].js */\"));\n};\n\nCast.getInitialProps = function _callee(context) {\n  var id, _await$Promise$all, _await$Promise$all2, show, data;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Promise.all([fetch(\"https://api.tvmaze.com/shows/\".concat(id)).then(function (r) {\n            return r.json();\n          }), fetch(\"https://api.tvmaze.com/shows/\".concat(id, \"/crew\")).then(function (r) {\n            return r.json();\n          })]));\n\n        case 3:\n          _await$Promise$all = _context.sent;\n          _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2);\n          show = _await$Promise$all2[0];\n          data = _await$Promise$all2[1];\n          return _context.abrupt(\"return\", {\n            show: show,\n            crew: data.map(function (entry) {\n              return entry;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Cast;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/crew/[id].js"],"names":["Link","Layout","fetch","Cast","props","show","name","crew","length","map","person","id","type","image","original","getInitialProps","context","query","Promise","all","then","r","json","data","entry"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAEd,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,wCAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,wCAAc,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBA,KAAK,CAACC,IAAN,CAAWC,IAAlC,uBADJ,EAGI;AAAA,wCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,KAAK,CAACG,IAAN,CAAWC,MAAX,GAAoB,CAApB,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACpBJ,KAAK,CAACG,IAAN,CAAWE,GAAX,CAAe,UAAAC,MAAM;AAAA,WAClB;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACA,MAAP,CAAcC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,mBAAX;AAA+B,MAAA,EAAE,yBAAkBD,MAAM,CAACA,MAAP,CAAcC,EAAhC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,MAAM,CAACE,IAAX,cAAyBF,MAAM,CAACA,MAAP,CAAcJ,IAAvC,CADJ,CADJ,CADkB;AAAA,GAArB,CADoB,CAAxB,GAQO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAVZ,CAHJ,EAgBI;AAAA,wCAAe,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBF,KAAK,CAACC,IAAN,CAAWQ,KAAX,GAAmB;AAAK,IAAA,GAAG,EAAET,KAAK,CAACC,IAAN,CAAWQ,KAAX,CAAiBC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnF,CAhBJ,CADJ;AAAA;AAAA;AAAA,isSAFc;AAAA,CAAlB;;AA4HAX,IAAI,CAACY,eAAL,GAAuB,iBAAgBC,OAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACXL,UAAAA,EADW,GACJK,OAAO,CAACC,KADJ,CACXN,EADW;AAAA;AAAA,2CAEQO,OAAO,CAACC,GAAR,CAAY,CACnCjB,KAAK,wCAAiCS,EAAjC,EAAL,CAA4CS,IAA5C,CAAiD,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,WAAlD,CADmC,EAEnCpB,KAAK,wCAAiCS,EAAjC,WAAL,CAAiDS,IAAjD,CAAsD,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,WAAvD,CAFmC,CAAZ,CAFR;;AAAA;AAAA;AAAA;AAEZjB,UAAAA,IAFY;AAENkB,UAAAA,IAFM;AAAA,2CAOZ;AACHlB,YAAAA,IAAI,EAAJA,IADG;AAEHE,YAAAA,IAAI,EAAEgB,IAAI,CAACd,GAAL,CAAS,UAAAe,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAAd;AAFH,WAPY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAaA,eAAerB,IAAf","sourcesContent":["import Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Cast = props => (\n\n    <Layout>\n        <div className=\"container\">\n            <h1 className=\"title\">{props.show.name}'s Unofficial Blog</h1>\n\n            <div className=\"list\">\n                <h2>Crew</h2>\n                {props.crew.length > 0 ? <ul>\n                    {props.crew.map(person => (\n                        <li key={person.person.id} >\n                            <Link href=\"/crew/person/[id]\" as={`/crew/person/${person.person.id}`}>\n                                <a>{person.type}........{person.person.name}</a>\n                            </Link>\n                        </li>\n                    ))}\n                </ul> : <p>OMG! We don't seem to have this information... This is really embarrassing.</p>}\n\n            </div>\n            <div className=\"img\">{props.show.image ? <img src={props.show.image.original} /> : <div />}</div>\n        </div>\n        <style jsx>{`\n\n           .title {\n            grid-column-start: 1;\n            grid-column-end: 5;\n            grid-row-start: 1;\n            grid-row-end: 2;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-bottom: 0px;\n        }\n        .list {\n            grid-column-start: 2;\n            grid-column-end: 3;\n            grid-row-start: 2;\n            grid-row-end: 5;\n            margin: 0;\n                padding: 0;\n                align-items: center;\n                justify-content: center;\n                text-align: center\n\n        }\n        li {\n            list-style-type: none;\n                height: 10vh;\n                display: flex;\n                align-items: center;\n                padding-left: 2vw;\n                justify-content: space-between;\n                border: 1px solid #DDD;\n        }\n        .img {\n            grid-column-start: 3;\n                grid-column-end: 5;\n                grid-row-start: 2;\n                grid-row-end: 5;\n                justify-self: center;\n                margin-top: 7vh;\n                margin-left: 5vw;\n        }\n        .img img {\n            object-fit: cover;\n           max-height: 100%;         \n    }\n        .container {\n            padding-top: 15px;\n            justify-content: stretch;   \n            align-content: stretch;     \n            display: grid;\n            grid-template-columns: 7vw 35vw 20vw 20vw ;\n            grid-template-rows: 10vh 40vh 30vh 15vh;\n            margin-left: 6%; \n            margin-right: 6%;      \n         }\n         @media (max-width: 800px){\n\n            .characterImg img {\n                object-fit: cover;\n               max-height: 5vh;         \n        }\n            .container {\n                padding-top: 15px;\n                justify-content: stretch;   \n                align-content: stretch;     \n                display: grid;\n                grid-template-columns: 20vw 20vw 20vw 20vw ;\n                grid-template-rows: 12vh 25vh 20vh 19vh;\n                margin-left: 9%; \n                margin-right: 9%;\n                font-size: 9px;     \n             }\n             .img {\n                grid-column-start: 1;\n                grid-column-end: 5;\n                grid-row-start: 2;\n                grid-row-end: 3;\n                justify-self: center;\n                margin: 0;\n            }\n            .list {\n                grid-column-start: 1;\n                grid-column-end: 5;\n                grid-row-start: 3;\n                grid-row-end: 5;       \n            }\n            li {\n                list-style-type: none;\n                height: 5vh;\n                text-align: left;\n            }\n            .title {\n                text-align: center;\n            }\n\n          }\n        `}\n\n        </style>\n    </Layout>\n);\n\nCast.getInitialProps = async function (context) {\n    const { id } = context.query;\n    const [show, data] = await Promise.all([\n        fetch(`https://api.tvmaze.com/shows/${id}`).then(r => r.json()),\n        fetch(`https://api.tvmaze.com/shows/${id}/crew`).then(r => r.json()),\n    ])\n\n    return {\n        show,\n        crew: data.map(entry => entry)\n    };\n};\n\nexport default Cast;"]},"metadata":{},"sourceType":"module"}