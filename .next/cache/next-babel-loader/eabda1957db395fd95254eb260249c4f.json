{"ast":null,"code":"var _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/cast/[id].js\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport React from \"react\";\n\nconst Cast = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: \"container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }\n}, __jsx(\"h1\", {\n  className: \"title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }\n}, props.show.name, \"'s Unofficial Blog\"), __jsx(\"ul\", {\n  className: \"list\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }\n}, __jsx(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 17\n  }\n}, \"Cast\"), props.cast.map(person => __jsx(\"li\", {\n  key: person.person.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 21\n  }\n}, __jsx(Link, {\n  href: \"/cast/person/[id]\",\n  as: `/cast/person/${person.person.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 25\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 29\n  }\n}, person.person.name, \"........\", person.character.name)), __jsx(\"div\", {\n  className: \"characterImg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }\n}, person.character.image ? __jsx(\"img\", {\n  src: person.character.image.original,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 81\n  }\n}) : __jsx(\"noimg\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 129\n  }\n}))))), __jsx(\"div\", {\n  className: \"img\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }\n}, props.show.image ? __jsx(\"img\", {\n  src: props.show.image.original,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 54\n  }\n}) : __jsx(\"noimg\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 96\n  }\n}))), __jsx(\"style\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}, `\n\n        .characterImg > img {\n            object-fit: cover;\n           max-height: 10vh;         \n    }\n           .title {\n            grid-column-start: 1;\n            grid-column-end: 5;\n            grid-row-start: 1;\n            grid-row-end: 2;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-bottom: 0px;\n        }\n        .list {\n            grid-column-start: 2;\n            grid-column-end: 3;\n            grid-row-start: 2;\n            grid-row-end: 5;\n            margin: 0;\n                padding: 0;\n                align-items: center;\n                justify-content: center;\n                text-align: center\n\n        }\n        li {\n            list-style-type: none;\n                height: 10vh;\n                display: flex;\n                align-items: center;\n                padding-left: 2vw;\n                justify-content: space-between;\n                border: 1px solid #DDD;\n                text-align: left;\n        }\n        .img {\n            grid-column-start: 3;\n                grid-column-end: 5;\n                grid-row-start: 2;\n                grid-row-end: 5;\n                justify-self: center;\n                margin-top: 7vh;\n                padding: 5%;\n\n        }\n        .img > img {\n            object-fit: cover;\n           max-height: 100%; \n\n    }\n        .container {\n            padding-top: 15px;\n            justify-content: stretch;   \n            align-content: stretch;     \n            display: grid;\n            grid-template-columns: 7vw 35vw 20vw 20vw ;\n            grid-template-rows: 10vh 40vh 40vh 25vh;\n            margin-left: 6%; \n            margin-right: 6%;      \n         }\n         @media (max-width: 800px){\n            Layout {\n                font-size: 10px;\n            }\n            .characterImg > img {\n                object-fit: cover;\n               max-height: 5vh;         \n        }\n            .container {\n                padding-top: 15px;\n                justify-content: stretch;   \n                align-content: stretch;     \n                display: grid;\n                grid-template-columns: 20vw 20vw 20vw 20vw ;\n                grid-template-rows: 8vh 25vh 20vh 19vh;\n                margin-left: 9%; \n                margin-right: 9%;\n                font-size: 9px;     \n             }\n             .img {\n                grid-column-start: 1;\n                grid-column-end: 5;\n                grid-row-start: 2;\n                grid-row-end: 3;\n                justify-self: center;\n                margin: 0;\n            }\n            .list {\n                grid-column-start: 1;\n                grid-column-end: 5;\n                grid-row-start: 3;\n                grid-row-end: 5;    \n            }\n            li {\n                list-style-type: none;\n                height: 5vh;\n                text-align: left;\n            }\n\n          }\n       `));\n\nCast.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const [show, data] = await Promise.all([fetch(`https://api.tvmaze.com/shows/${id}`).then(r => r.json()), fetch(`https://api.tvmaze.com/shows/${id}/cast`).then(r => r.json())]);\n  return {\n    show,\n    cast: data.map(entry => entry)\n  };\n};\n\nexport default Cast;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/cast/[id].js"],"names":["Link","Layout","React","Cast","props","show","name","cast","map","person","id","character","image","original","getInitialProps","context","query","data","Promise","all","fetch","then","r","json","entry"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport React from \"react\"\n\nconst Cast = props => (\n\n    <Layout>\n        <div className=\"container\">\n            <h1 className=\"title\">{props.show.name}'s Unofficial Blog</h1>\n            <ul className=\"list\">\n                <h2>Cast</h2>\n                {props.cast.map(person => (\n                    <li key={person.person.id} >\n                        <Link href=\"/cast/person/[id]\" as={`/cast/person/${person.person.id}`}>\n                            <a>{person.person.name}........{person.character.name}</a>\n\n                        </Link>\n                        <div className=\"characterImg\">{person.character.image ? <img src={person.character.image.original} /> : <noimg />}</div>\n                    </li>\n                ))}\n            </ul>\n            <div className=\"img\">{props.show.image ? <img src={props.show.image.original} /> : <noimg />}</div>\n        </div>\n        <style>{`\n\n        .characterImg > img {\n            object-fit: cover;\n           max-height: 10vh;         \n    }\n           .title {\n            grid-column-start: 1;\n            grid-column-end: 5;\n            grid-row-start: 1;\n            grid-row-end: 2;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-bottom: 0px;\n        }\n        .list {\n            grid-column-start: 2;\n            grid-column-end: 3;\n            grid-row-start: 2;\n            grid-row-end: 5;\n            margin: 0;\n                padding: 0;\n                align-items: center;\n                justify-content: center;\n                text-align: center\n\n        }\n        li {\n            list-style-type: none;\n                height: 10vh;\n                display: flex;\n                align-items: center;\n                padding-left: 2vw;\n                justify-content: space-between;\n                border: 1px solid #DDD;\n                text-align: left;\n        }\n        .img {\n            grid-column-start: 3;\n                grid-column-end: 5;\n                grid-row-start: 2;\n                grid-row-end: 5;\n                justify-self: center;\n                margin-top: 7vh;\n                padding: 5%;\n\n        }\n        .img > img {\n            object-fit: cover;\n           max-height: 100%; \n\n    }\n        .container {\n            padding-top: 15px;\n            justify-content: stretch;   \n            align-content: stretch;     \n            display: grid;\n            grid-template-columns: 7vw 35vw 20vw 20vw ;\n            grid-template-rows: 10vh 40vh 40vh 25vh;\n            margin-left: 6%; \n            margin-right: 6%;      \n         }\n         @media (max-width: 800px){\n            Layout {\n                font-size: 10px;\n            }\n            .characterImg > img {\n                object-fit: cover;\n               max-height: 5vh;         \n        }\n            .container {\n                padding-top: 15px;\n                justify-content: stretch;   \n                align-content: stretch;     \n                display: grid;\n                grid-template-columns: 20vw 20vw 20vw 20vw ;\n                grid-template-rows: 8vh 25vh 20vh 19vh;\n                margin-left: 9%; \n                margin-right: 9%;\n                font-size: 9px;     \n             }\n             .img {\n                grid-column-start: 1;\n                grid-column-end: 5;\n                grid-row-start: 2;\n                grid-row-end: 3;\n                justify-self: center;\n                margin: 0;\n            }\n            .list {\n                grid-column-start: 1;\n                grid-column-end: 5;\n                grid-row-start: 3;\n                grid-row-end: 5;    \n            }\n            li {\n                list-style-type: none;\n                height: 5vh;\n                text-align: left;\n            }\n\n          }\n       `}\n        </style>\n\n    </Layout>\n);\n\nCast.getInitialProps = async function (context) {\n    const { id } = context.query;\n    const [show, data] = await Promise.all([\n        fetch(`https://api.tvmaze.com/shows/${id}`).then(r => r.json()),\n        fetch(`https://api.tvmaze.com/shows/${id}/cast`).then(r => r.json()),\n    ])\n    return {\n        show,\n        cast: data.map(entry => entry)\n    };\n};\n\nexport default Cast;"]},"metadata":{},"sourceType":"module"}