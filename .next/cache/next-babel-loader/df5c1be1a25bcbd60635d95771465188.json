{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/MyLayout';\n\nvar Session = function Session(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, \"Season \", props.completeSeason.season), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, props.completeSeason.map(function (episode) {\n    return __jsx(\"li\", {\n      key: episode.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"/seasons/episode/[id]\",\n      as: \"/seasons/episode/\".concat(episode.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 25\n      }\n    }, \"Episode \", episode.number, \"........\", episode.name)));\n  })));\n};\n\nSession.getInitialProps = function _callee(context) {\n  var id, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/seasons/\".concat(id, \"/episodes\")));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          console.log(data[0].name);\n          return _context.abrupt(\"return\", {\n            completeSeason: data.map(function (entry) {\n              return entry;\n            })\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Session;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js"],"names":["useRouter","Layout","Session","props","completeSeason","season","map","episode","id","number","name","getInitialProps","context","query","fetch","res","json","data","console","log","entry"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYA,KAAK,CAACC,cAAN,CAAqBC,MAAjC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACC,cAAN,CAAqBE,GAArB,CAAyB,UAAAC,OAAO;AAAA,WAC7B;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,uBAAX;AAAmC,MAAA,EAAE,6BAAsBD,OAAO,CAACC,EAA9B,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYD,OAAO,CAACE,MAApB,cAAoCF,OAAO,CAACG,IAA5C,CADJ,CADJ,CAD6B;AAAA,GAAhC,CADL,CAFJ,CADiB;AAAA,CAArB;;AAeAR,OAAO,CAACS,eAAR,GAA0B,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdJ,UAAAA,EADc,GACPI,OAAO,CAACC,KADD,CACdL,EADc;AAAA;AAAA,2CAEJM,KAAK,0CAAmCN,EAAnC,eAFD;;AAAA;AAEhBO,UAAAA,GAFgB;AAAA;AAAA,2CAGHA,GAAG,CAACC,IAAJ,EAHG;;AAAA;AAGhBC,UAAAA,IAHgB;AAItBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAJ,CAAQP,IAApB;AAJsB,2CAMf;AACHN,YAAAA,cAAc,EAAEa,IAAI,CAACX,GAAL,CAAS,UAAAc,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAAd;AADb,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAWA,eAAelB,OAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport Layout from '../../components/MyLayout';\n\nconst Session = props => (\n    <Layout>\n        <h1>Season {props.completeSeason.season}</h1>\n        <ul>\n            {props.completeSeason.map(episode => (\n                <li key={episode.id}>\n                    <Link href=\"/seasons/episode/[id]\" as={`/seasons/episode/${episode.id}`}>\n                        <a>Episode {episode.number}........{episode.name}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    </Layout>\n);\n\nSession.getInitialProps = async function (context) {\n    const { id } = context.query;\n    const res = await fetch(`https://api.tvmaze.com/seasons/${id}/episodes`);\n    const data = await res.json();\n    console.log(data[0].name)\n\n    return {\n        completeSeason: data.map(entry => entry)\n    };\n};\n\nexport default Session;"]},"metadata":{},"sourceType":"module"}