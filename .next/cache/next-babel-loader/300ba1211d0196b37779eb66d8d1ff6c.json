{"ast":null,"code":"var _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router';\n\nconst Episodes = props => {\n  const router = useRouter();\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, router.query.id), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, props.seasons.map(season => __jsx(\"li\", {\n    key: season.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }\n  }, season.premiereDate ? __jsx(Link, {\n    href: \"/season/[id]\",\n    as: `/season/${season.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 52\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 33\n    }\n  }, \"Season \", season.number, \" - \", season.premiereDate, \" / \", season.endDate, \" \")) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 33\n    }\n  }, \"Season \", season.number))))));\n};\n\nEpisodes.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const [title, seasons] = await Promise.all([fetch(`https://api.tvmaze.com/shows/${id}`).then(r => r.json().name), fetch(`https://api.tvmaze.com/shows/${id}/seasons`).then(r => r.json().map(entry => entry))]);\n  return {\n    seasons: data.map(entry => entry)\n  };\n};\n\nexport default Episodes;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js"],"names":["Link","Layout","fetch","useRouter","Episodes","props","router","query","id","seasons","map","season","premiereDate","number","endDate","getInitialProps","context","title","Promise","all","then","r","json","name","entry","data"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAEtB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,MAAM,CAACC,KAAP,CAAaC,EAAlB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACI,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IACrB;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACH,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,MAAM,CAACC,YAAP,GAAsB,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,EAAE,EAAG,WAAUD,MAAM,CAACH,EAAG,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWG,MAAM,CAACE,MAAlB,SAA6BF,MAAM,CAACC,YAApC,SAAqDD,MAAM,CAACG,OAA5D,MADmB,CAAtB,GAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWH,MAAM,CAACE,MAAlB,CANR,CADJ,CADH,CADL,CAFJ,CADJ;AAsBH,CAzBD;;AA2BAT,QAAQ,CAACW,eAAT,GAA2B,gBAAgBC,OAAhB,EAAyB;AAChD,QAAM;AAAER,IAAAA;AAAF,MAASQ,OAAO,CAACT,KAAvB;AACA,QAAM,CAACU,KAAD,EAAQR,OAAR,IAAmB,MAAMS,OAAO,CAACC,GAAR,CAAY,CACvCjB,KAAK,CAAE,gCAA+BM,EAAG,EAApC,CAAL,CAA4CY,IAA5C,CAAiDC,CAAC,IAAIA,CAAC,CAACC,IAAF,GAASC,IAA/D,CADuC,EAEvCrB,KAAK,CAAE,gCAA+BM,EAAG,UAApC,CAAL,CAAoDY,IAApD,CAAyDC,CAAC,IAAIA,CAAC,CAACC,IAAF,GAASZ,GAAT,CAAac,KAAK,IAAIA,KAAtB,CAA9D,CAFuC,CAAZ,CAA/B;AAKA,SAAO;AACHf,IAAAA,OAAO,EAAEgB,IAAI,CAACf,GAAL,CAASc,KAAK,IAAIA,KAAlB;AADN,GAAP;AAGH,CAVD;;AAYA,eAAepB,QAAf","sourcesContent":["import Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router'\n\nconst Episodes = props => {\n\n    const router = useRouter()\n    return (\n        <Layout>\n            <h1>{router.query.id}</h1>\n            <ul>\n                {props.seasons.map(season => (\n                    <li key={season.id} >\n                        <div>\n                            {season.premiereDate ? <Link href=\"/season/[id]\" as={`/season/${season.id}`}>\n                                <a>Season {season.number} - {season.premiereDate} / {season.endDate} </a>\n\n                            </Link>\n                                :\n                                <p>Season {season.number}</p>\n                            }\n                        </div>\n\n                    </li>\n                ))}\n            </ul>\n\n        </Layout>\n    )\n};\n\nEpisodes.getInitialProps = async function (context) {\n    const { id } = context.query\n    const [title, seasons] = await Promise.all([\n        fetch(`https://api.tvmaze.com/shows/${id}`).then(r => r.json().name),\n        fetch(`https://api.tvmaze.com/shows/${id}/seasons`).then(r => r.json().map(entry => entry)),\n\n    ])\n    return {\n        seasons: data.map(entry => entry)\n    };\n};\n\nexport default Episodes"]},"metadata":{},"sourceType":"module"}