{"ast":null,"code":"var _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/episode/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episode = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}, \"Season \", props.episode.season, \" - Episode \", props.episode.number), __jsx(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }\n}, props.episode.name), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, props.summary), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }\n}, \"Airdate: \", props.episode.airdate), __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, props.episode.image ? __jsx(\"img\", {\n  src: props.episode.image.original,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 37\n  }\n}) : __jsx(\"noimg\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 82\n  }\n})));\n\nEpisode.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`http://api.tvmaze.com/episodes/${id}`);\n  const data = await res.json();\n  const summary = data.summary;\n  return {\n    episode: data,\n    summary: summary.substr(3).slice(0, -1)\n  };\n};\n\nexport default Episode;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/episode/[id].js"],"names":["Layout","fetch","Episode","props","episode","season","number","name","summary","airdate","image","original","getInitialProps","context","id","query","res","data","json","substr","slice"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,8BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAEjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAYA,KAAK,CAACC,OAAN,CAAcC,MAA1B,iBAA6CF,KAAK,CAACC,OAAN,CAAcE,MAA3D,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKH,KAAK,CAACC,OAAN,CAAcG,IAAnB,CAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIJ,KAAK,CAACK,OAAV,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaL,KAAK,CAACC,OAAN,CAAcK,OAA3B,CALJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMN,KAAK,CAACC,OAAN,CAAcM,KAAd,GAAsB;AAAK,EAAA,GAAG,EAAEP,KAAK,CAACC,OAAN,CAAcM,KAAd,CAAoBC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAtB,GAAmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAzE,CAPJ,CAFJ;;AAeAT,OAAO,CAACU,eAAR,GAA0B,gBAAgBC,OAAhB,EAAyB;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMf,KAAK,CAAE,kCAAiCa,EAAG,EAAtC,CAAvB;AACA,QAAMG,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,QAAMV,OAAO,GAAGS,IAAI,CAACT,OAArB;AAGA,SAAO;AACHJ,IAAAA,OAAO,EAAEa,IADN;AAEHT,IAAAA,OAAO,EAAEA,OAAO,CAACW,MAAR,CAAe,CAAf,EAAkBC,KAAlB,CAAwB,CAAxB,EAA2B,CAAC,CAA5B;AAFN,GAAP;AAIH,CAXD;;AAaA,eAAelB,OAAf","sourcesContent":["import Layout from '../../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episode = props => (\n\n    <Layout>\n        <h1>Season {props.episode.season} - Episode {props.episode.number}</h1>\n        <h2>{props.episode.name}</h2>\n\n        <p>{props.summary}</p>\n        <p>Airdate: {props.episode.airdate}</p>\n\n        <div>{props.episode.image ? <img src={props.episode.image.original} /> : <noimg />}</div>\n\n    </Layout>\n)\n    ;\n\nEpisode.getInitialProps = async function (context) {\n    const { id } = context.query;\n    const res = await fetch(`http://api.tvmaze.com/episodes/${id}`);\n    const data = await res.json();\n    const summary = data.summary\n\n\n    return {\n        episode: data,\n        summary: summary.substr(3).slice(0, -1)\n    };\n};\n\nexport default Episode;"]},"metadata":{},"sourceType":"module"}