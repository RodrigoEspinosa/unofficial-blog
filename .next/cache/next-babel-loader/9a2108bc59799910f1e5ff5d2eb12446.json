{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/episode/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Episode = function Episode(props) {\n  var summary = props.episode.summary(__jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, \"Season \", props.episode.season, \" - Episode \", props.episode.number), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, props.episode.name), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, summary.slice(0, 3)), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, \"Airdate: \", props.episode.airdate), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, props.episode.image ? __jsx(\"img\", {\n    src: props.episode.image.original,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 45\n    }\n  }) : __jsx(\"noimg\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 90\n    }\n  }))));\n};\n\nEpisode.getInitialProps = function _callee(context) {\n  var id, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://api.tvmaze.com/episodes/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            episode: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Episode;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/episode/[id].js"],"names":["Layout","fetch","Episode","props","summary","episode","season","number","name","slice","airdate","image","original","getInitialProps","context","id","query","res","json","data"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,8BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AAErB,MAAIC,OAAO,GAAGD,KAAK,CAACE,OAAN,CAAcD,OAAd,CAGN,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYD,KAAK,CAACE,OAAN,CAAcC,MAA1B,iBAA6CH,KAAK,CAACE,OAAN,CAAcE,MAA3D,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAK,CAACE,OAAN,CAAcG,IAAnB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAJ,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaN,KAAK,CAACE,OAAN,CAAcK,OAA3B,CAJJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,KAAK,CAACE,OAAN,CAAcM,KAAd,GAAsB;AAAK,IAAA,GAAG,EAAER,KAAK,CAACE,OAAN,CAAcM,KAAd,CAAoBC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,GAAmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzE,CANJ,CAHM,CAAd;AAaH,CAfD;;AAiBAV,OAAO,CAACW,eAAR,GAA0B,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,UAAAA,EADc,GACPD,OAAO,CAACE,KADD,CACdD,EADc;AAAA;AAAA,2CAEJd,KAAK,0CAAmCc,EAAnC,EAFD;;AAAA;AAEhBE,UAAAA,GAFgB;AAAA;AAAA,2CAGHA,GAAG,CAACC,IAAJ,EAHG;;AAAA;AAGhBC,UAAAA,IAHgB;AAAA,2CAMf;AACHd,YAAAA,OAAO,EAAEc;AADN,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAYA,eAAejB,OAAf","sourcesContent":["import Layout from '../../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episode = props => {\n\n    let summary = props.episode.summary\n        (\n\n            <Layout>\n                <h1>Season {props.episode.season} - Episode {props.episode.number}</h1>\n                <h2>{props.episode.name}</h2>\n                <p>{summary.slice(0, 3)}</p>\n                <p>Airdate: {props.episode.airdate}</p>\n\n                <div>{props.episode.image ? <img src={props.episode.image.original} /> : <noimg />}</div>\n\n            </Layout>\n        )\n};\n\nEpisode.getInitialProps = async function (context) {\n    const { id } = context.query;\n    const res = await fetch(`http://api.tvmaze.com/episodes/${id}`);\n    const data = await res.json();\n\n\n    return {\n        episode: data,\n\n    };\n};\n\nexport default Episode;"]},"metadata":{},"sourceType":"module"}