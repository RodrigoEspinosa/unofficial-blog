{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episodes = props => __jsx(Layout, null, __jsx(\"div\", {\n  className: \"jsx-1445598537\" + \" \" + \"container\"\n}, __jsx(\"h1\", {\n  className: \"jsx-1445598537\" + \" \" + \"title\"\n}, props.show.name, \"'s Unofficial Blog\"), __jsx(\"div\", {\n  className: \"jsx-1445598537\" + \" \" + \"list\"\n}, __jsx(\"h2\", {\n  className: \"jsx-1445598537\"\n}, \"All seasons!\"), __jsx(\"ul\", {\n  className: \"jsx-1445598537\"\n}, props.seasons.map(season => __jsx(\"li\", {\n  key: season.id,\n  className: \"jsx-1445598537\"\n}, __jsx(\"div\", {\n  className: \"jsx-1445598537\"\n}, season.premiereDate ? __jsx(Link, {\n  href: \"/season/[id]\",\n  as: `/season/${season.id}`\n}, __jsx(\"a\", {\n  className: \"jsx-1445598537\"\n}, \"Season \", season.number, \" - \", season.premiereDate, \" / \", season.endDate, \" \")) : __jsx(\"p\", {\n  className: \"jsx-1445598537\"\n}, \"Season \", season.number)))))), __jsx(\"div\", {\n  className: \"jsx-1445598537\" + \" \" + \"img\"\n}, props.show.image ? __jsx(\"img\", {\n  src: props.show.image.original,\n  className: \"jsx-1445598537\"\n}) : __jsx(\"noimg\", {\n  className: \"jsx-1445598537\"\n}))), __jsx(_JSXStyle, {\n  id: \"1445598537\"\n}, [\".title.jsx-1445598537{grid-column-start:1;grid-column-end:5;grid-row-start:1;grid-row-end:2;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0px;}\", \"ul.jsx-1445598537{border:1px solid #DDD;}\", \".list.jsx-1445598537{grid-column-start:1;grid-column-end:3;grid-row-start:2;grid-row-end:5;margin:0;padding:0;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;}\", \"li.jsx-1445598537{list-style-type:none;height:13vh;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}\", \".img.jsx-1445598537{grid-column-start:3;grid-column-end:5;grid-row-start:2;grid-row-end:5;justify-self:center;margin-top:20px;}\", \".img.jsx-1445598537>img.jsx-1445598537{object-fit:cover;max-height:100%;}\", \".container.jsx-1445598537{padding-top:15px;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch;-webkit-align-content:stretch;-ms-flex-line-pack:stretch;align-content:stretch;display:grid;grid-template-columns:20vw 20vw 20vw 20vw;grid-template-rows:10vh 40vh 20vh 19vh;margin-left:11%;margin-right:6%;}\", \"@media (max-width:800px){Layout.jsx-1445598537{font-size:10px;}.container.jsx-1445598537{padding-top:15px;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch;-webkit-align-content:stretch;-ms-flex-line-pack:stretch;align-content:stretch;display:grid;grid-template-columns:20vw 20vw 20vw 20vw;grid-template-rows:8vh 35vh 20vh 19vh;margin-left:9%;margin-right:9%;font-size:9px;}.img.jsx-1445598537{grid-column-start:1;grid-column-end:5;grid-row-start:2;grid-row-end:3;justify-self:center;}.summary.jsx-1445598537{grid-column-start:1;grid-column-end:5;grid-row-start:3;grid-row-end:4;}.list.jsx-1445598537{grid-column-start:1;grid-column-end:5;grid-row-start:3;grid-row-end:5;padding-top:5vh;}li.jsx-1445598537{list-style-type:none;height:6vh;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}}\"]));\n\nEpisodes.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const [show, seasons] = await Promise.all([fetch(`https://api.tvmaze.com/shows/${id}`).then(r => r.json()), fetch(`https://api.tvmaze.com/shows/${id}/seasons`).then(r => r.json())]);\n  return {\n    show,\n    seasons: seasons.map(entry => entry)\n  };\n};\n\nexport default Episodes;","map":null,"metadata":{},"sourceType":"module"}