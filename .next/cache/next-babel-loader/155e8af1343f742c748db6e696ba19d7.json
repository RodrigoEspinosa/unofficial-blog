{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Blog = function Blog(props) {\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h1\", {\n    className: \"title\"\n  }, props.data.name, \"'s unofficial Blog\"), __jsx(\"div\", {\n    className: \"summary\"\n  }, __jsx(\"p\", null, props.data.summary.replace(/<[^>]*>?/gm, '')), __jsx(\"p\", null, props.data.genres.length > 0 ? \"Genre: \" + props.data.genres.join(\" / \") : __jsx(\"noimg\", null)), __jsx(\"p\", null, \"Network: \", props.data.network ? props.data.network.name + \" - \" + props.data.network.country.name : props.data.webChannel.name), __jsx(\"p\", null, \"Status: \", props.data.status), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"div\", {\n    className: \"lista\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", {\n    className: \"episodes\"\n  }, __jsx(Link, {\n    href: \"/seasons/${props.data.id}\",\n    as: \"/seasons/\".concat(props.data.id)\n  }, __jsx(\"a\", null, \"Episodes\"))), __jsx(\"li\", {\n    className: \"cast\"\n  }, __jsx(Link, {\n    href: \"/cast/${props.data.id}\",\n    as: \"/cast/\".concat(props.data.id)\n  }, __jsx(\"a\", null, \"Cast\"))), __jsx(\"li\", {\n    className: \"crew\"\n  }, __jsx(Link, {\n    href: \"/crew/${props.data.id}\",\n    as: \"/crew/\".concat(props.data.id)\n  }, __jsx(\"a\", null, \"Crew\")))))), __jsx(\"div\", {\n    className: \"img\"\n  }, props.data.image ? __jsx(\"img\", {\n    src: props.data.image.original\n  }) : __jsx(\"noimg\", null))), __jsx(\"style\", null, \"\\n            \\n            .summary {\\n                grid-column-start: 1;\\n                grid-column-end: 3;\\n                grid-row-start: 2;\\n                grid-row-end: 3;\\n                padding: 10px 15px 10px 20px;\\n            }\\n            .lista {\\n\\n            }\\n            .list {\\n                grid-column-start: 1;\\n                grid-column-end: 3;\\n                grid-row-start: 3;\\n                grid-row-end: 5;    \\n         \\n            }\\n            .img {\\n                grid-column-start: 3;\\n                grid-column-end: 5;\\n                grid-row-start: 2;\\n                grid-row-end: 5;\\n                justify-self: center;\\n                margin-top: 20px;\\n            }\\n            .img > img {\\n                    object-fit: cover;\\n                   max-height: 100%;         \\n            }\\n            .title {\\n                grid-column-start: 1;\\n                grid-column-end: 5;\\n                grid-row-start: 1;\\n                grid-row-end: 2;\\n                display: flex;\\n                align-items: center;\\n                justify-content: center;\\n                margin-bottom: 0px;\\n            }\\n            .container {\\n                    padding-top: 15px;\\n                    justify-content: stretch;   \\n                    align-content: stretch;     \\n                    display: grid;\\n                    grid-template-columns: 20vw 20vw 20vw 30vw ;\\n                    grid-template-rows: 10vh 45vh 20vh 19vh;\\n                    margin-left: 8%; \\n                    margin-right: 6%;      \\n                 }\\n            ul {\\n                margin: 0;\\n                padding: 0;\\n            }\\n            li {\\n                list-style-type: none;\\n                height: 13vh;\\n                display: flex;\\n                align-items: center;\\n                justify-content: center;\\n\\n            }\\n            .episodes {\\n                background-color: #F4F4F4;\\n            }\\n            .cast {\\n                background-color: white;\\n            }\\n            .crew {\\n                background-color: #F4F4F4;\\n            }\\n            @media (max-width: 800px){\\n                Layout {\\n                    font-size: 10px;\\n                }\\n                .container {\\n                    padding-top: 15px;\\n                    justify-content: stretch;   \\n                    align-content: stretch;     \\n                    display: grid;\\n                    grid-template-columns: 20vw 20vw 20vw 20vw ;\\n                    grid-template-rows: 8vh 42vh 20vh 19vh;\\n                    margin-left: 9%; \\n                    margin-right: 9%;\\n                    font-size: 9px;     \\n                 }\\n                 .img {\\n                    grid-column-start: 1;\\n                    grid-column-end: 5;\\n                    grid-row-start: 2;\\n                    grid-row-end: 3;\\n                    justify-self: center;\\n                }\\n                .summary {\\n                    grid-column-start: 1;\\n                    grid-column-end: 5;\\n                    grid-row-start: 3;\\n                    grid-row-end: 4;\\n                }\\n                .list {\\n                    grid-column-start: 1;\\n                    grid-column-end: 5;\\n                    grid-row-start: 4;\\n                    grid-row-end: 5;            \\n                }\\n                li {\\n                    list-style-type: none;\\n                    height: 6vh;\\n                    display: flex;\\n                    align-items: center;\\n                    justify-content: center;\\n    \\n                }\\n\\n              }\\n       \"));\n};\n\nBlog.getInitialProps = function _callee(context) {\n  var id, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/singlesearch/shows?q=\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          console.log(id);\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Blog;","map":null,"metadata":{},"sourceType":"module"}