{"ast":null,"code":"var _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/cast/person/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Person = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: \"jsx-46081292\" + \" \" + \"container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}, __jsx(\"h1\", {\n  className: \"jsx-46081292\" + \" \" + \"title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 13\n  }\n}, props.personData.name), __jsx(\"div\", {\n  className: \"jsx-46081292\" + \" \" + \"personInfo\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }\n}, __jsx(\"div\", {\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 17\n  }\n}, \" \", props.personData.birthday ? __jsx(\"h3\", {\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 52\n  }\n}, \"Born: \", props.personData.birthday, \", \", props.personData.country.name) : __jsx(\"noimg\", {\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 130\n  }\n}), \" \"), __jsx(\"div\", {\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 17\n  }\n}, props.personData.deathday ? __jsx(\"h3\", {\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 51\n  }\n}, \"Dead: \", props.personData.deathday) : __jsx(\"noimg\", {\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 96\n  }\n}))), __jsx(\"div\", {\n  className: \"jsx-46081292\" + \" \" + \"img\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }\n}, props.personData.image ? __jsx(\"img\", {\n  src: props.personData.image.original,\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 60\n  }\n}) : __jsx(\"noimg\", {\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 108\n  }\n})), __jsx(\"ul\", {\n  className: \"jsx-46081292\" + \" \" + \"list\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }\n}, props.actorData.map(show => __jsx(\"li\", {\n  key: show.id,\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 21\n  }\n}, __jsx(\"h3\", {\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 25\n  }\n}, show._embedded.show.name, \" (\", show._embedded.show.network ? show._embedded.show.network.name : show._embedded.show.webChannel.name, \")\"), __jsx(\"h4\", {\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 25\n  }\n}, show._embedded.show.genres.join(\" / \")), __jsx(\"div\", {\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 25\n  }\n}, show._embedded.show.image ? __jsx(\"img\", {\n  src: show._embedded.show.image.original,\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 59\n  }\n}) : __jsx(\"noimg\", {\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 110\n  }\n})), __jsx(\"p\", {\n  className: \"jsx-46081292\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 25\n  }\n}, show._embedded.show.summary.substring(3, show._embedded.show.summary.length - 4).replace(/<[^>]*>?/gm, '')))))), __jsx(_JSXStyle, {\n  id: \"46081292\",\n  __self: this\n}, \".container.jsx-46081292{padding-top:25px;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch;-webkit-align-content:stretch;-ms-flex-line-pack:stretch;align-content:stretch;display:grid;grid-template-columns:20vw 20vw 20vw 20vw;grid-template-rows:10vh 40vh 20vh 19vh;margin-left:6%;margin-right:6%;}.personalInfo.jsx-46081292{grid-column-start:1;grid-column-end:5;grid-row-start:2;grid-row-end:3;}.list.jsx-46081292{grid-column-start:1;grid-column-end:5;grid-row-start:3;grid-row-end:5;}.title.jsx-46081292{grid-column-start:1;grid-column-end:5;grid-row-start:1;grid-row-end:2;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXNtYXJ0aW4vRG9jdW1lbnRzL0NvZGluZy9tYWQtbWVuLWJsb2cvcGFnZXMvY2FzdC9wZXJzb24vW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4Qm9CLEFBRzhCLEFBVUcsQUFNQSxBQU9BLGlCQXRCSSxHQVVOLEFBTUEsQUFPQSxrQkFaRCxBQU1BLEFBT0EsaUJBWkYsQUFNQSxBQU9BLGVBWmxCLEFBT0QsQUFNaUIsa0RBekJTLHdCQTBCSCx1REF6Qk4sYUFDOEIseUJBeUJwQixpQkF4QmdCLHVDQUN4QixlQUNDLGdCQUNuQixZQXNCcUIsa0JBQ3RCIiwiZmlsZSI6Ii9Vc2Vycy9hbmRyZXNtYXJ0aW4vRG9jdW1lbnRzL0NvZGluZy9tYWQtbWVuLWJsb2cvcGFnZXMvY2FzdC9wZXJzb24vW2lkXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSAnLi4vLi4vLi4vY29tcG9uZW50cy9NeUxheW91dCc7XG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5cbmNvbnN0IFBlcnNvbiA9IHByb3BzID0+IChcbiAgICA8TGF5b3V0PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRpdGxlXCI+e3Byb3BzLnBlcnNvbkRhdGEubmFtZX08L2gxPlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBlcnNvbkluZm9cIj5cbiAgICAgICAgICAgICAgICA8ZGl2PiB7cHJvcHMucGVyc29uRGF0YS5iaXJ0aGRheSA/IDxoMz5Cb3JuOiB7cHJvcHMucGVyc29uRGF0YS5iaXJ0aGRheX0sIHtwcm9wcy5wZXJzb25EYXRhLmNvdW50cnkubmFtZX08L2gzPiA6IDxub2ltZyAvPn0gPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2Pntwcm9wcy5wZXJzb25EYXRhLmRlYXRoZGF5ID8gPGgzPkRlYWQ6IHtwcm9wcy5wZXJzb25EYXRhLmRlYXRoZGF5fTwvaDM+IDogPG5vaW1nIC8+fTwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImltZ1wiPntwcm9wcy5wZXJzb25EYXRhLmltYWdlID8gPGltZyBzcmM9e3Byb3BzLnBlcnNvbkRhdGEuaW1hZ2Uub3JpZ2luYWx9IC8+IDogPG5vaW1nIC8+fTwvZGl2PlxuXG5cbiAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJsaXN0XCI+XG4gICAgICAgICAgICAgICAge3Byb3BzLmFjdG9yRGF0YS5tYXAoc2hvdyA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDxsaSBrZXk9e3Nob3cuaWR9PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8aDM+e3Nob3cuX2VtYmVkZGVkLnNob3cubmFtZX0gKHtzaG93Ll9lbWJlZGRlZC5zaG93Lm5ldHdvcmsgPyBzaG93Ll9lbWJlZGRlZC5zaG93Lm5ldHdvcmsubmFtZSA6IHNob3cuX2VtYmVkZGVkLnNob3cud2ViQ2hhbm5lbC5uYW1lfSk8L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGg0PntzaG93Ll9lbWJlZGRlZC5zaG93LmdlbnJlcy5qb2luKFwiIC8gXCIpfTwvaDQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PntzaG93Ll9lbWJlZGRlZC5zaG93LmltYWdlID8gPGltZyBzcmM9e3Nob3cuX2VtYmVkZGVkLnNob3cuaW1hZ2Uub3JpZ2luYWx9IC8+IDogPG5vaW1nIC8+fTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPHA+e3Nob3cuX2VtYmVkZGVkLnNob3cuc3VtbWFyeS5zdWJzdHJpbmcoMywgc2hvdy5fZW1iZWRkZWQuc2hvdy5zdW1tYXJ5Lmxlbmd0aCAtIDQpLnJlcGxhY2UoLzxbXj5dKj4/L2dtLCAnJyl9PC9wPlxuXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuY29udGFpbmVyIHtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAyNXB4O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzdHJldGNoOyAgIFxuICAgICAgICAgICAgYWxpZ24tY29udGVudDogc3RyZXRjaDsgICAgIFxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMjB2dyAyMHZ3IDIwdncgMjB2dyA7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDEwdmggNDB2aCAyMHZoIDE5dmg7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNiU7IFxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA2JTsgICAgICBcbiAgICAgICAgIH1cbiAgICAgICAgIC5wZXJzb25hbEluZm8ge1xuICAgICAgICAgICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XG4gICAgICAgICAgICBncmlkLWNvbHVtbi1lbmQ6IDU7XG4gICAgICAgICAgICBncmlkLXJvdy1zdGFydDogMjtcbiAgICAgICAgICAgIGdyaWQtcm93LWVuZDogMztcbiAgICAgICAgIH1cbiAgICAgICAgIC5saXN0IHtcbiAgICAgICAgICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xuICAgICAgICAgICAgZ3JpZC1jb2x1bW4tZW5kOiA1O1xuICAgICAgICAgICAgZ3JpZC1yb3ctc3RhcnQ6IDM7XG4gICAgICAgICAgICBncmlkLXJvdy1lbmQ6IDU7XG5cbiAgICAgICAgfVxuICAgICAgICAgLnRpdGxlIHtcbiAgICAgICAgICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xuICAgICAgICAgICAgZ3JpZC1jb2x1bW4tZW5kOiA1O1xuICAgICAgICAgICAgZ3JpZC1yb3ctc3RhcnQ6IDE7XG4gICAgICAgICAgICBncmlkLXJvdy1lbmQ6IDI7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4pO1xuXG5QZXJzb24uZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICBjb25zdCB7IGlkIH0gPSBjb250ZXh0LnF1ZXJ5O1xuXG4gICAgY29uc3QgW3BlcnNvbkRhdGEsIGFjdG9yRGF0YV0gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS50dm1hemUuY29tL3Blb3BsZS8ke2lkfWApLnRoZW4ociA9PiByLmpzb24oKSksXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS50dm1hemUuY29tL3Blb3BsZS8ke2lkfS9jYXN0Y3JlZGl0cz9lbWJlZD1zaG93YCkudGhlbihyID0+IHIuanNvbigpKSxcblxuICAgIF0pXG5cbiAgICByZXR1cm4ge1xuICAgICAgICBwZXJzb25EYXRhLCBhY3RvckRhdGEsXG5cbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUGVyc29uOyJdfQ== */\\n/*@ sourceURL=/Users/andresmartin/Documents/Coding/mad-men-blog/pages/cast/person/[id].js */\"));\n\nPerson.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const [personData, actorData] = await Promise.all([fetch(`https://api.tvmaze.com/people/${id}`).then(r => r.json()), fetch(`https://api.tvmaze.com/people/${id}/castcredits?embed=show`).then(r => r.json())]);\n  return {\n    personData,\n    actorData\n  };\n};\n\nexport default Person;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/cast/person/[id].js"],"names":["Layout","fetch","Link","Person","props","personData","name","birthday","country","deathday","image","original","actorData","map","show","id","_embedded","network","webChannel","genres","join","summary","substring","length","replace","getInitialProps","context","query","Promise","all","then","r","json"],"mappings":"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","sourcesContent":["import Layout from '../../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Person = props => (\n    <Layout>\n        <div className=\"container\">\n            <h1 className=\"title\">{props.personData.name}</h1>\n\n            <div className=\"personInfo\">\n                <div> {props.personData.birthday ? <h3>Born: {props.personData.birthday}, {props.personData.country.name}</h3> : <noimg />} </div>\n\n                <div>{props.personData.deathday ? <h3>Dead: {props.personData.deathday}</h3> : <noimg />}</div>\n            </div>\n            <div className=\"img\">{props.personData.image ? <img src={props.personData.image.original} /> : <noimg />}</div>\n\n\n            <ul className=\"list\">\n                {props.actorData.map(show => (\n                    <li key={show.id}>\n\n                        <h3>{show._embedded.show.name} ({show._embedded.show.network ? show._embedded.show.network.name : show._embedded.show.webChannel.name})</h3>\n                        <h4>{show._embedded.show.genres.join(\" / \")}</h4>\n                        <div>{show._embedded.show.image ? <img src={show._embedded.show.image.original} /> : <noimg />}</div>\n                        <p>{show._embedded.show.summary.substring(3, show._embedded.show.summary.length - 4).replace(/<[^>]*>?/gm, '')}</p>\n\n                    </li>\n                ))}\n            </ul>\n        </div>\n        <style jsx>{`\n        .container {\n            padding-top: 25px;\n            justify-content: stretch;   \n            align-content: stretch;     \n            display: grid;\n            grid-template-columns: 20vw 20vw 20vw 20vw ;\n            grid-template-rows: 10vh 40vh 20vh 19vh;\n            margin-left: 6%; \n            margin-right: 6%;      \n         }\n         .personalInfo {\n            grid-column-start: 1;\n            grid-column-end: 5;\n            grid-row-start: 2;\n            grid-row-end: 3;\n         }\n         .list {\n            grid-column-start: 1;\n            grid-column-end: 5;\n            grid-row-start: 3;\n            grid-row-end: 5;\n\n        }\n         .title {\n            grid-column-start: 1;\n            grid-column-end: 5;\n            grid-row-start: 1;\n            grid-row-end: 2;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-bottom: 0px;\n        }\n      `}</style>\n    </Layout>\n);\n\nPerson.getInitialProps = async function (context) {\n    const { id } = context.query;\n\n    const [personData, actorData] = await Promise.all([\n        fetch(`https://api.tvmaze.com/people/${id}`).then(r => r.json()),\n        fetch(`https://api.tvmaze.com/people/${id}/castcredits?embed=show`).then(r => r.json()),\n\n    ])\n\n    return {\n        personData, actorData,\n\n    };\n};\n\nexport default Person;"]},"metadata":{},"sourceType":"module"}