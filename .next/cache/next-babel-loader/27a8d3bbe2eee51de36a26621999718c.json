{"ast":null,"code":"var _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episodes = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: \"jsx-433161\" + \" \" + \"container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}, __jsx(\"h1\", {\n  className: \"jsx-433161\" + \" \" + \"title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 13\n  }\n}, props.show.name, \"'s Unofficial Blog\"), __jsx(\"ul\", {\n  className: \"jsx-433161\" + \" \" + \"list\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }\n}, __jsx(\"h2\", {\n  className: \"jsx-433161\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 17\n  }\n}, \"All seasons!\"), props.seasons.map(season => __jsx(\"li\", {\n  key: season.id,\n  className: \"jsx-433161\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }\n}, __jsx(\"div\", {\n  className: \"jsx-433161\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 25\n  }\n}, season.premiereDate ? __jsx(Link, {\n  href: \"/season/[id]\",\n  as: `/season/${season.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 52\n  }\n}, __jsx(\"a\", {\n  className: \"jsx-433161\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 33\n  }\n}, \"Season \", season.number, \" - \", season.premiereDate, \" / \", season.endDate, \" \")) : __jsx(\"p\", {\n  className: \"jsx-433161\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 33\n  }\n}, \"Season \", season.number)))))), __jsx(_JSXStyle, {\n  id: \"433161\",\n  __self: this\n}, \".title.jsx-433161{grid-column-start:1;grid-column-end:5;grid-row-start:1;grid-row-end:2;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0px;}.list.jsx-433161{grid-column-start:1;grid-column-end:4;grid-row-start:2;grid-row-end:5;margin:0;padding:0;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;}li.jsx-433161{list-style-type:none;height:13vh;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.container.jsx-433161{padding-top:15px;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch;-webkit-align-content:stretch;-ms-flex-line-pack:stretch;align-content:stretch;display:grid;grid-template-columns:20vw 20vw 20vw 30vw;grid-template-rows:10vh 45vh 20vh 19vh;margin-left:6%;margin-right:6%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXNtYXJ0aW4vRG9jdW1lbnRzL0NvZGluZy9tYWQtbWVuLWJsb2cvcGFnZXMvc2Vhc29ucy9baWRdLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBCb0IsQUFHaUMsQUFVQSxBQVlDLEFBT0osaUJBQ08sR0E3Qk4sQUFVQSxDQVlGLFlBQ0MsS0F0QkEsQUFVQSxpQkFURixBQVVBLGVBVEYsQUFVSixTQUNLLFVBQ1Msa0JBU0EsYUFNRCx3QkExQkgsc0NBWVEsaUJBZWQsQ0FOYyxZQU9nQix5QkEzQnBCLGlCQTRCZ0IsMkJBZDVDLFlBZW9CLE1BZm5CLEFBT0EsU0FTb0IsZ0JBQ25CLFlBOUJxQixrQkFDdEIiLCJmaWxlIjoiL1VzZXJzL2FuZHJlc21hcnRpbi9Eb2N1bWVudHMvQ29kaW5nL21hZC1tZW4tYmxvZy9wYWdlcy9zZWFzb25zL1tpZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi8uLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuXG5jb25zdCBFcGlzb2RlcyA9IHByb3BzID0+IChcbiAgICA8TGF5b3V0PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRpdGxlXCI+e3Byb3BzLnNob3cubmFtZX0ncyBVbm9mZmljaWFsIEJsb2c8L2gxPlxuICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cImxpc3RcIj5cbiAgICAgICAgICAgICAgICA8aDI+QWxsIHNlYXNvbnMhPC9oMj5cbiAgICAgICAgICAgICAgICB7cHJvcHMuc2Vhc29ucy5tYXAoc2Vhc29uID0+IChcbiAgICAgICAgICAgICAgICAgICAgPGxpIGtleT17c2Vhc29uLmlkfSA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzZWFzb24ucHJlbWllcmVEYXRlID8gPExpbmsgaHJlZj1cIi9zZWFzb24vW2lkXVwiIGFzPXtgL3NlYXNvbi8ke3NlYXNvbi5pZH1gfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGE+U2Vhc29uIHtzZWFzb24ubnVtYmVyfSAtIHtzZWFzb24ucHJlbWllcmVEYXRlfSAvIHtzZWFzb24uZW5kRGF0ZX0gPC9hPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPlNlYXNvbiB7c2Vhc29uLm51bWJlcn08L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC50aXRsZSB7XG4gICAgICAgICAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcbiAgICAgICAgICAgIGdyaWQtY29sdW1uLWVuZDogNTtcbiAgICAgICAgICAgIGdyaWQtcm93LXN0YXJ0OiAxO1xuICAgICAgICAgICAgZ3JpZC1yb3ctZW5kOiAyO1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICAgICAgfVxuICAgICAgICAubGlzdCB7XG4gICAgICAgICAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcbiAgICAgICAgICAgIGdyaWQtY29sdW1uLWVuZDogNDtcbiAgICAgICAgICAgIGdyaWQtcm93LXN0YXJ0OiAyO1xuICAgICAgICAgICAgZ3JpZC1yb3ctZW5kOiA1O1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAgICAgICB9XG4gICAgICAgIGxpIHtcbiAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEzdmg7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICB9XG4gICAgICAgIC5jb250YWluZXIge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6IDE1cHg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0cmV0Y2g7ICAgXG4gICAgICAgICAgICBhbGlnbi1jb250ZW50OiBzdHJldGNoOyAgICAgXG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyMHZ3IDIwdncgMjB2dyAzMHZ3IDtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMTB2aCA0NXZoIDIwdmggMTl2aDtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA2JTsgXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDYlOyAgICAgIFxuICAgICAgICAgfVxuICAgICAgICBgfVxuXG4gICAgICAgIDwvc3R5bGU+XG5cbiAgICA8L0xheW91dD5cbik7XG5cbkVwaXNvZGVzLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgY29uc3QgeyBpZCB9ID0gY29udGV4dC5xdWVyeVxuICAgIGNvbnN0IFtzaG93LCBzZWFzb25zXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2hvd3MvJHtpZH1gKS50aGVuKHIgPT4gci5qc29uKCkpLFxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zaG93cy8ke2lkfS9zZWFzb25zYCkudGhlbihyID0+IHIuanNvbigpKSxcbiAgICBdKVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2hvdyxcbiAgICAgICAgc2Vhc29uczogc2Vhc29ucy5tYXAoZW50cnkgPT4gZW50cnkpXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVwaXNvZGVzIl19 */\\n/*@ sourceURL=/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js */\"));\n\nEpisodes.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const [show, seasons] = await Promise.all([fetch(`https://api.tvmaze.com/shows/${id}`).then(r => r.json()), fetch(`https://api.tvmaze.com/shows/${id}/seasons`).then(r => r.json())]);\n  return {\n    show,\n    seasons: seasons.map(entry => entry)\n  };\n};\n\nexport default Episodes;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js"],"names":["Link","Layout","fetch","Episodes","props","show","name","seasons","map","season","id","premiereDate","number","endDate","getInitialProps","context","query","Promise","all","then","r","json","entry"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA,kCAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA,kCAAc,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAuBA,KAAK,CAACC,IAAN,CAAWC,IAAlC,uBADJ,EAEI;AAAA,kCAAc,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IACrB;AAAI,EAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKD,MAAM,CAACE,YAAP,GAAsB,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,cAAX;AAA0B,EAAA,EAAE,EAAG,WAAUF,MAAM,CAACC,EAAG,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWD,MAAM,CAACG,MAAlB,SAA6BH,MAAM,CAACE,YAApC,SAAqDF,MAAM,CAACI,OAA5D,MADmB,CAAtB,GAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWJ,MAAM,CAACG,MAAlB,CANR,CADJ,CADH,CAFL,CAFJ,CADJ;AAAA;AAAA;AAAA,qgLADJ;;AAqEAT,QAAQ,CAACW,eAAT,GAA2B,gBAAgBC,OAAhB,EAAyB;AAChD,QAAM;AAAEL,IAAAA;AAAF,MAASK,OAAO,CAACC,KAAvB;AACA,QAAM,CAACX,IAAD,EAAOE,OAAP,IAAkB,MAAMU,OAAO,CAACC,GAAR,CAAY,CACtChB,KAAK,CAAE,gCAA+BQ,EAAG,EAApC,CAAL,CAA4CS,IAA5C,CAAiDC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAAtD,CADsC,EAEtCnB,KAAK,CAAE,gCAA+BQ,EAAG,UAApC,CAAL,CAAoDS,IAApD,CAAyDC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAA9D,CAFsC,CAAZ,CAA9B;AAKA,SAAO;AACHhB,IAAAA,IADG;AAEHE,IAAAA,OAAO,EAAEA,OAAO,CAACC,GAAR,CAAYc,KAAK,IAAIA,KAArB;AAFN,GAAP;AAIH,CAXD;;AAaA,eAAenB,QAAf","sourcesContent":["import Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episodes = props => (\n    <Layout>\n        <div className=\"container\">\n            <h1 className=\"title\">{props.show.name}'s Unofficial Blog</h1>\n            <ul className=\"list\">\n                <h2>All seasons!</h2>\n                {props.seasons.map(season => (\n                    <li key={season.id} >\n                        <div>\n                            {season.premiereDate ? <Link href=\"/season/[id]\" as={`/season/${season.id}`}>\n                                <a>Season {season.number} - {season.premiereDate} / {season.endDate} </a>\n\n                            </Link>\n                                :\n                                <p>Season {season.number}</p>\n                            }\n                        </div>\n\n                    </li>\n                ))}\n            </ul>\n        </div>\n        <style jsx>{`\n        .title {\n            grid-column-start: 1;\n            grid-column-end: 5;\n            grid-row-start: 1;\n            grid-row-end: 2;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-bottom: 0px;\n        }\n        .list {\n            grid-column-start: 1;\n            grid-column-end: 4;\n            grid-row-start: 2;\n            grid-row-end: 5;\n            margin: 0;\n                padding: 0;\n                align-items: center;\n                justify-content: center;\n                text-align: center\n\n        }\n        li {\n            list-style-type: none;\n                height: 13vh;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n        }\n        .container {\n            padding-top: 15px;\n            justify-content: stretch;   \n            align-content: stretch;     \n            display: grid;\n            grid-template-columns: 20vw 20vw 20vw 30vw ;\n            grid-template-rows: 10vh 45vh 20vh 19vh;\n            margin-left: 6%; \n            margin-right: 6%;      \n         }\n        `}\n\n        </style>\n\n    </Layout>\n);\n\nEpisodes.getInitialProps = async function (context) {\n    const { id } = context.query\n    const [show, seasons] = await Promise.all([\n        fetch(`https://api.tvmaze.com/shows/${id}`).then(r => r.json()),\n        fetch(`https://api.tvmaze.com/shows/${id}/seasons`).then(r => r.json()),\n    ])\n\n    return {\n        show,\n        seasons: seasons.map(entry => entry)\n    };\n};\n\nexport default Episodes"]},"metadata":{},"sourceType":"module"}