{"ast":null,"code":"var _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episodes = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: \"jsx-809418846\" + \" \" + \"container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}, __jsx(\"h1\", {\n  className: \"jsx-809418846\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 13\n  }\n}, props.title, \"'s Unofficial Blog\"), __jsx(\"ul\", {\n  className: \"jsx-809418846\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }\n}, props.seasons.map(season => __jsx(\"li\", {\n  key: season.id,\n  className: \"jsx-809418846\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 21\n  }\n}, __jsx(\"div\", {\n  className: \"jsx-809418846\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 25\n  }\n}, season.premiereDate ? __jsx(Link, {\n  href: \"/season/[id]\",\n  as: `/season/${season.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 52\n  }\n}, __jsx(\"a\", {\n  className: \"jsx-809418846\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 33\n  }\n}, \"Season \", season.number, \" - \", season.premiereDate, \" / \", season.endDate, \" \")) : __jsx(\"p\", {\n  className: \"jsx-809418846\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 33\n  }\n}, \"Season \", season.number)))))), __jsx(_JSXStyle, {\n  id: \"809418846\",\n  __self: this\n}, \".container.jsx-809418846{padding-top:15px;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch;-webkit-align-content:stretch;-ms-flex-line-pack:stretch;align-content:stretch;display:grid;grid-template-columns:20vw 20vw 20vw 20vw;grid-template-rows:8vh 42vh 20vh 19vh;margin-left:9%;margin-right:9%;font-size:9px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXNtYXJ0aW4vRG9jdW1lbnRzL0NvZGluZy9tYWQtbWVuLWJsb2cvcGFnZXMvc2Vhc29ucy9baWRdLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlCb0IsQUFHOEIsaUJBQ08sdUdBQ0YsK0VBQ1QsYUFDOEIsMENBQ0wsc0NBQ3ZCLGVBQ0MsZ0JBQ0YsY0FDakIiLCJmaWxlIjoiL1VzZXJzL2FuZHJlc21hcnRpbi9Eb2N1bWVudHMvQ29kaW5nL21hZC1tZW4tYmxvZy9wYWdlcy9zZWFzb25zL1tpZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi8uLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuXG5jb25zdCBFcGlzb2RlcyA9IHByb3BzID0+IChcbiAgICA8TGF5b3V0PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPGgxPntwcm9wcy50aXRsZX0ncyBVbm9mZmljaWFsIEJsb2c8L2gxPlxuICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgIHtwcm9wcy5zZWFzb25zLm1hcChzZWFzb24gPT4gKFxuICAgICAgICAgICAgICAgICAgICA8bGkga2V5PXtzZWFzb24uaWR9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3NlYXNvbi5wcmVtaWVyZURhdGUgPyA8TGluayBocmVmPVwiL3NlYXNvbi9baWRdXCIgYXM9e2Avc2Vhc29uLyR7c2Vhc29uLmlkfWB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YT5TZWFzb24ge3NlYXNvbi5udW1iZXJ9IC0ge3NlYXNvbi5wcmVtaWVyZURhdGV9IC8ge3NlYXNvbi5lbmREYXRlfSA8L2E+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+U2Vhc29uIHtzZWFzb24ubnVtYmVyfTwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmNvbnRhaW5lciB7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogMTVweDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3RyZXRjaDsgICBcbiAgICAgICAgICAgIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2g7ICAgICBcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDIwdncgMjB2dyAyMHZ3IDIwdncgO1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA4dmggNDJ2aCAyMHZoIDE5dmg7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogOSU7IFxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA5JTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogOXB4OyAgICAgXG4gICAgICAgICB9XG4gICAgICAgIGB9XG5cbiAgICAgICAgPC9zdHlsZT5cblxuICAgIDwvTGF5b3V0PlxuKTtcblxuRXBpc29kZXMuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICBjb25zdCB7IGlkIH0gPSBjb250ZXh0LnF1ZXJ5XG4gICAgY29uc3QgW3Nob3csIHNlYXNvbnNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zaG93cy8ke2lkfWApLnRoZW4ociA9PiByLmpzb24oKSksXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS50dm1hemUuY29tL3Nob3dzLyR7aWR9L3NlYXNvbnNgKS50aGVuKHIgPT4gci5qc29uKCkpLFxuICAgIF0pXG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0aXRsZTogc2hvdy5uYW1lLFxuICAgICAgICBzZWFzb25zOiBzZWFzb25zLm1hcChlbnRyeSA9PiBlbnRyeSlcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRXBpc29kZXMiXX0= */\\n/*@ sourceURL=/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js */\"));\n\nEpisodes.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const [show, seasons] = await Promise.all([fetch(`https://api.tvmaze.com/shows/${id}`).then(r => r.json()), fetch(`https://api.tvmaze.com/shows/${id}/seasons`).then(r => r.json())]);\n  return {\n    title: show.name,\n    seasons: seasons.map(entry => entry)\n  };\n};\n\nexport default Episodes;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js"],"names":["Link","Layout","fetch","Episodes","props","title","seasons","map","season","id","premiereDate","number","endDate","getInitialProps","context","query","show","Promise","all","then","r","json","name","entry"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA,qCAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,KAAX,uBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKD,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IACrB;AAAI,EAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKD,MAAM,CAACE,YAAP,GAAsB,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,cAAX;AAA0B,EAAA,EAAE,EAAG,WAAUF,MAAM,CAACC,EAAG,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWD,MAAM,CAACG,MAAlB,SAA6BH,MAAM,CAACE,YAApC,SAAqDF,MAAM,CAACI,OAA5D,MADmB,CAAtB,GAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWJ,MAAM,CAACG,MAAlB,CANR,CADJ,CADH,CADL,CAFJ,CADJ;AAAA;AAAA;AAAA,6uGADJ;;AAwCAR,QAAQ,CAACU,eAAT,GAA2B,gBAAgBC,OAAhB,EAAyB;AAChD,QAAM;AAAEL,IAAAA;AAAF,MAASK,OAAO,CAACC,KAAvB;AACA,QAAM,CAACC,IAAD,EAAOV,OAAP,IAAkB,MAAMW,OAAO,CAACC,GAAR,CAAY,CACtChB,KAAK,CAAE,gCAA+BO,EAAG,EAApC,CAAL,CAA4CU,IAA5C,CAAiDC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAAtD,CADsC,EAEtCnB,KAAK,CAAE,gCAA+BO,EAAG,UAApC,CAAL,CAAoDU,IAApD,CAAyDC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAA9D,CAFsC,CAAZ,CAA9B;AAKA,SAAO;AACHhB,IAAAA,KAAK,EAAEW,IAAI,CAACM,IADT;AAEHhB,IAAAA,OAAO,EAAEA,OAAO,CAACC,GAAR,CAAYgB,KAAK,IAAIA,KAArB;AAFN,GAAP;AAIH,CAXD;;AAaA,eAAepB,QAAf","sourcesContent":["import Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episodes = props => (\n    <Layout>\n        <div className=\"container\">\n            <h1>{props.title}'s Unofficial Blog</h1>\n            <ul>\n                {props.seasons.map(season => (\n                    <li key={season.id} >\n                        <div>\n                            {season.premiereDate ? <Link href=\"/season/[id]\" as={`/season/${season.id}`}>\n                                <a>Season {season.number} - {season.premiereDate} / {season.endDate} </a>\n\n                            </Link>\n                                :\n                                <p>Season {season.number}</p>\n                            }\n                        </div>\n\n                    </li>\n                ))}\n            </ul>\n        </div>\n        <style jsx>{`\n        .container {\n            padding-top: 15px;\n            justify-content: stretch;   \n            align-content: stretch;     \n            display: grid;\n            grid-template-columns: 20vw 20vw 20vw 20vw ;\n            grid-template-rows: 8vh 42vh 20vh 19vh;\n            margin-left: 9%; \n            margin-right: 9%;\n            font-size: 9px;     \n         }\n        `}\n\n        </style>\n\n    </Layout>\n);\n\nEpisodes.getInitialProps = async function (context) {\n    const { id } = context.query\n    const [show, seasons] = await Promise.all([\n        fetch(`https://api.tvmaze.com/shows/${id}`).then(r => r.json()),\n        fetch(`https://api.tvmaze.com/shows/${id}/seasons`).then(r => r.json()),\n    ])\n\n    return {\n        title: show.name,\n        seasons: seasons.map(entry => entry)\n    };\n};\n\nexport default Episodes"]},"metadata":{},"sourceType":"module"}