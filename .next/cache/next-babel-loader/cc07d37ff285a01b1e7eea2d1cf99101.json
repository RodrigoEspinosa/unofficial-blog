{"ast":null,"code":"var _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episodes = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}, props.data.name, \"'s unofficial Blog\"), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }\n}, props.seasons.map(season => __jsx(\"li\", {\n  key: season.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 17\n  }\n}, __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 21\n  }\n}, season.premiereDate ? __jsx(Link, {\n  href: \"/season/[id]\",\n  as: `/season/${season.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 48\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 29\n  }\n}, \"Season \", season.number, \" - \", season.premiereDate, \" / \", season.endDate, \" \")) : __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 29\n  }\n}, \"Season \", season.number))))));\n\nEpisodes.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}/seasons`);\n  const data = await res.json();\n  return {\n    seasons: data.map(entry => entry)\n  };\n};\n\nexport default Episodes;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js"],"names":["Link","Layout","fetch","Episodes","props","data","name","seasons","map","season","id","premiereDate","number","endDate","getInitialProps","context","query","res","json","entry"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,uBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IACrB;AAAI,EAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKD,MAAM,CAACE,YAAP,GAAsB,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,cAAX;AAA0B,EAAA,EAAE,EAAG,WAAUF,MAAM,CAACC,EAAG,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWD,MAAM,CAACG,MAAlB,SAA6BH,MAAM,CAACE,YAApC,SAAqDF,MAAM,CAACI,OAA5D,MADmB,CAAtB,GAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWJ,MAAM,CAACG,MAAlB,CANR,CADJ,CADH,CADL,CAFJ,CADJ;;AAuBAT,QAAQ,CAACW,eAAT,GAA2B,gBAAgBC,OAAhB,EAAyB;AAChD,QAAM;AAAEL,IAAAA;AAAF,MAASK,OAAO,CAACC,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMf,KAAK,CAAE,gCAA+BQ,EAAG,UAApC,CAAvB;AACA,QAAML,IAAI,GAAG,MAAMY,GAAG,CAACC,IAAJ,EAAnB;AAEA,SAAO;AACHX,IAAAA,OAAO,EAAEF,IAAI,CAACG,GAAL,CAASW,KAAK,IAAIA,KAAlB;AADN,GAAP;AAGH,CARD;;AAUA,eAAehB,QAAf","sourcesContent":["import Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episodes = props => (\n    <Layout>\n        <h1>{props.data.name}'s unofficial Blog</h1>\n        <ul>\n            {props.seasons.map(season => (\n                <li key={season.id} >\n                    <div>\n                        {season.premiereDate ? <Link href=\"/season/[id]\" as={`/season/${season.id}`}>\n                            <a>Season {season.number} - {season.premiereDate} / {season.endDate} </a>\n\n                        </Link>\n                            :\n                            <p>Season {season.number}</p>\n                        }\n                    </div>\n\n                </li>\n            ))}\n        </ul>\n\n    </Layout>\n);\n\nEpisodes.getInitialProps = async function (context) {\n    const { id } = context.query\n    const res = await fetch(`https://api.tvmaze.com/shows/${id}/seasons`);\n    const data = await res.json();\n\n    return {\n        seasons: data.map(entry => entry)\n    };\n};\n\nexport default Episodes"]},"metadata":{},"sourceType":"module"}