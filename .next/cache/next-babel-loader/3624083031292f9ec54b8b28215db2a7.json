{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/episode/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Episode = function Episode(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, \"Season \", props.episode.season, \" - Episode \", props.episode.number), props.episode.summary, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"Airdate: \", props.episode.airdate));\n};\n\nEpisode.getInitialProps = function _callee(context) {\n  var id, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://api.tvmaze.com/episodes/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            episode: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Episode;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/episode/[id].js"],"names":["Layout","fetch","Episode","props","episode","season","number","summary","airdate","getInitialProps","context","id","query","res","json","data"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,8BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SAEjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYA,KAAK,CAACC,OAAN,CAAcC,MAA1B,iBAA6CF,KAAK,CAACC,OAAN,CAAcE,MAA3D,CADJ,EAGKH,KAAK,CAACC,OAAN,CAAcG,OAHnB,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaJ,KAAK,CAACC,OAAN,CAAcI,OAA3B,CAJJ,CAFiB;AAAA,CAArB;;AAWAN,OAAO,CAACO,eAAR,GAA0B,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,UAAAA,EADc,GACPD,OAAO,CAACE,KADD,CACdD,EADc;AAAA;AAAA,2CAEJV,KAAK,0CAAmCU,EAAnC,EAFD;;AAAA;AAEhBE,UAAAA,GAFgB;AAAA;AAAA,2CAGHA,GAAG,CAACC,IAAJ,EAHG;;AAAA;AAGhBC,UAAAA,IAHgB;AAAA,2CAKf;AACHX,YAAAA,OAAO,EAAEW;AADN,WALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAUA,eAAeb,OAAf","sourcesContent":["import Layout from '../../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episode = props => (\n\n    <Layout>\n        <h1>Season {props.episode.season} - Episode {props.episode.number}</h1>\n\n        {props.episode.summary}\n        <p>Airdate: {props.episode.airdate}</p>\n\n    </Layout>\n);\n\nEpisode.getInitialProps = async function (context) {\n    const { id } = context.query;\n    const res = await fetch(`http://api.tvmaze.com/episodes/${id}`);\n    const data = await res.json();\n\n    return {\n        episode: data\n    };\n};\n\nexport default Episode;"]},"metadata":{},"sourceType":"module"}