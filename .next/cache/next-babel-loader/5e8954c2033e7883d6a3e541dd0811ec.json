{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/cast/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nvar Person = function Person(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, props.personData.name), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, props.personData.deathday ? __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 43\n    }\n  }, \"Born: \", props.personData.birthday, \", \", props.personData.country.name, \" \", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 114\n    }\n  }), \" Dead: \", props.personData.deathday) : __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 162\n    }\n  }, \"Born: \", props.personData.birthday, \", \", props.personData.country.name)), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, props.personData.image ? __jsx(\"img\", {\n    src: props.personData.image.original,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 40\n    }\n  }) : __jsx(\"noimg\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 88\n    }\n  })));\n};\n\nPerson.getInitialProps = function _callee(context) {\n  var id, _await$Promise$all, _await$Promise$all2, personData, actorData;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Promise.all([fetch(\"https://api.tvmaze.com/people/\".concat(id)).then(function (r) {\n            return r.json();\n          }), fetch(\"https://api.tvmaze.com/people/\".concat(id, \"/castcredits?embed=show\")).then(function (r) {\n            return r.json();\n          })]));\n\n        case 3:\n          _await$Promise$all = _context.sent;\n          _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2);\n          personData = _await$Promise$all2[0];\n          actorData = _await$Promise$all2[1];\n          return _context.abrupt(\"return\", {\n            personData: personData,\n            actorData: actorData\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Person;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/cast/[id].js"],"names":["Layout","fetch","Link","Person","props","personData","name","deathday","birthday","country","image","original","getInitialProps","context","id","query","Promise","all","then","r","json","actorData"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,UAAN,CAAiBC,IAAtB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,KAAK,CAACC,UAAN,CAAiBE,QAAjB,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWH,KAAK,CAACC,UAAN,CAAiBG,QAA5B,QAAwCJ,KAAK,CAACC,UAAN,CAAiBI,OAAjB,CAAyBH,IAAjE,OAAuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvE,aAAqFF,KAAK,CAACC,UAAN,CAAiBE,QAAtG,CAA5B,GAAmJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWH,KAAK,CAACC,UAAN,CAAiBG,QAA5B,QAAwCJ,KAAK,CAACC,UAAN,CAAiBI,OAAjB,CAAyBH,IAAjE,CAAzJ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,KAAK,CAACC,UAAN,CAAiBK,KAAjB,GAAyB;AAAK,IAAA,GAAG,EAAEN,KAAK,CAACC,UAAN,CAAiBK,KAAjB,CAAuBC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,GAAyE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/E,CAHJ,CADgB;AAAA,CAApB;;AAUAR,MAAM,CAACS,eAAP,GAAyB,iBAAgBC,OAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAAA;AAAA,2CAGiBE,OAAO,CAACC,GAAR,CAAY,CAC9ChB,KAAK,yCAAkCa,EAAlC,EAAL,CAA6CI,IAA7C,CAAkD,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,WAAnD,CAD8C,EAE9CnB,KAAK,yCAAkCa,EAAlC,6BAAL,CAAoEI,IAApE,CAAyE,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,WAA1E,CAF8C,CAAZ,CAHjB;;AAAA;AAAA;AAAA;AAGdf,UAAAA,UAHc;AAGFgB,UAAAA,SAHE;AAAA,2CAQd;AACHhB,YAAAA,UAAU,EAAVA,UADG;AACSgB,YAAAA,SAAS,EAATA;AADT,WARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAaA,eAAelB,MAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Person = props => (\n    <Layout>\n        <h1>{props.personData.name}</h1>\n        <div>{props.personData.deathday ? <h3>Born: {props.personData.birthday}, {props.personData.country.name} <br /> Dead: {props.personData.deathday}</h3> : <h3>Born: {props.personData.birthday}, {props.personData.country.name}</h3>}</div>\n        <div>{props.personData.image ? <img src={props.personData.image.original} /> : <noimg />}</div>\n\n\n    </Layout>\n);\n\nPerson.getInitialProps = async function (context) {\n    const { id } = context.query;\n\n    const [personData, actorData] = await Promise.all([\n        fetch(`https://api.tvmaze.com/people/${id}`).then(r => r.json()),\n        fetch(`https://api.tvmaze.com/people/${id}/castcredits?embed=show`).then(r => r.json()),\n    ])\n\n    return {\n        personData, actorData\n    };\n};\n\nexport default Person;"]},"metadata":{},"sourceType":"module"}