{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/episodes.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Episodes = function Episodes(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, \"Seasons!\"), console.log(props.seasons), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, props.seasons.map(function (season) {\n    return __jsx(\"li\", {\n      key: season,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"/p/[number]\",\n      as: \"/p/\".concat(season.number),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }\n    }, season.number)));\n  })));\n};\n\nEpisodes.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://api.tvmaze.com/shows/385/seasons'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data[0].number));\n          return _context.abrupt(\"return\", {\n            seasons: data.map(function (entry) {\n              return entry;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Episodes;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/episodes.js"],"names":["Link","Layout","fetch","Episodes","props","console","log","seasons","map","season","number","getInitialProps","res","json","data","entry"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,CAFL,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkB,UAAAC,MAAM;AAAA,WACrB;AAAI,MAAA,GAAG,EAAEA,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,eAAQA,MAAM,CAACC,MAAf,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,MAAM,CAACC,MAAX,CADJ,CADJ,CADqB;AAAA,GAAxB,CADL,CAHJ,CADkB;AAAA,CAAtB;;AAiBAP,QAAQ,CAACQ,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLT,KAAK,CAAC,yCAAD,CADA;;AAAA;AACjBU,UAAAA,GADiB;AAAA;AAAA,2CAEJA,GAAG,CAACC,IAAJ,EAFI;;AAAA;AAEjBC,UAAAA,IAFiB;AAIvBT,UAAAA,OAAO,CAACC,GAAR,qCAAyCQ,IAAI,CAAC,CAAD,CAAJ,CAAQJ,MAAjD;AAJuB,2CAMhB;AACHH,YAAAA,OAAO,EAAEO,IAAI,CAACN,GAAL,CAAS,UAAAO,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAAd;AADN,WANgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAWA,eAAeZ,QAAf","sourcesContent":["import Link from 'next/link';\nimport Layout from '../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episodes = props => (\n    <Layout>\n        <h1>Seasons!</h1>\n        {console.log(props.seasons)}\n        <ul>\n            {props.seasons.map(season => (\n                <li key={season} >\n                    <Link href=\"/p/[number]\" as={`/p/${season.number}`}>\n                        <a>{season.number}{}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n\n    </Layout>\n);\n\nEpisodes.getInitialProps = async function () {\n    const res = await fetch('http://api.tvmaze.com/shows/385/seasons');\n    const data = await res.json();\n\n    console.log(`Show data fetched. Count: ${data[0].number}`);\n\n    return {\n        seasons: data.map(entry => entry)\n    };\n};\n\nexport default Episodes"]},"metadata":{},"sourceType":"module"}