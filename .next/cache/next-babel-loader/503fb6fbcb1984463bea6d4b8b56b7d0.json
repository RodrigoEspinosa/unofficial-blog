{"ast":null,"code":"var _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Head from 'next/head';\nimport React from \"react\";\n\nconst Choose = () => {\n  const {\n    0: show,\n    1: setShow\n  } = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = async function (data) {\n    await setShow(data.name);\n    console.log(show);\n  };\n\n  const PostLink = props => __jsx(Link, {\n    href: \"/[id]\",\n    as: `/${props.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Let's go!\"));\n\n  return __jsx(\"div\", {\n    className: \"jsx-3325692028\" + \" \" + \"indexContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Manrope:wght@300\",\n    rel: \"stylesheet\",\n    className: \"jsx-3325692028\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  })), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"jsx-3325692028\" + \" \" + \"indexForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"jsx-3325692028\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Pick a show:\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Mad Men, The Wire...\",\n    ref: register({\n      required: true,\n      validate: async value => {\n        const res = await fetch(`https://api.tvmaze.com/singlesearch/shows?q=${value}`);\n\n        if (res.ok) {\n          const data = await res.json();\n          console.log(data.name);\n          return data.name.length > 0;\n        } else {\n          setShow(\"\");\n          return __jsx(\"p\", {\n            className: \"jsx-3325692028\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 40\n            }\n          }, \"Don't be silly!\");\n        }\n      }\n    }),\n    className: \"jsx-3325692028\" + \" \" + \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), errors.name && __jsx(\"p\", {\n    className: \"jsx-3325692028\" + \" \" + \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, \"Don't be silly! That's not a show...\"), __jsx(\"div\", {\n    className: \"jsx-3325692028\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, show ? __jsx(\"div\", {\n    className: \"jsx-3325692028\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 30\n    }\n  }) : __jsx(\"input\", {\n    type: \"submit\",\n    value: \"I'm ready\",\n    className: \"jsx-3325692028\" + \" \" + \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 40\n    }\n  })), __jsx(\"div\", {\n    key: show,\n    className: \"jsx-3325692028\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, show.length > 0 ? __jsx(\"div\", {\n    className: \"jsx-3325692028\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 40\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3325692028\" + \" \" + \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, __jsx(PostLink, {\n    id: show,\n    className: \"jsx-3325692028\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 47\n    }\n  })), \" \", __jsx(\"p\", {\n    className: \"jsx-3325692028\" + \" \" + \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 76\n    }\n  }, \"\\\"Wild Thoughts\\\" - Dj Khaled, 2017\")) : __jsx(\"p\", {\n    className: \"jsx-3325692028\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 143\n    }\n  }, \"Please!\"))), __jsx(_JSXStyle, {\n    id: \"3325692028\",\n    __self: this\n  }, \".indexContainer.jsx-3325692028{position:absolute;top:0;left:0;width:100%;height:100%;background-color:white;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-family:'Manrope',sans-serif;-webkit-letter-spacing:0.4px;-moz-letter-spacing:0.4px;-ms-letter-spacing:0.4px;letter-spacing:0.4px;}.indexForm.jsx-3325692028{background-color:#33C7DE;margin-bottom:6vh;padding:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-jusfity-content:space-between;-ms-flex-pack:justify;jusfity-content:space-between;height:35vh;width:20vw;}input.jsx-3325692028{padding:10px;}.indexForm.jsx-3325692028>*.jsx-3325692028{margin:10px;}.button.jsx-3325692028{display:inline-block;padding:0.35em 1.2em;font-size:13px;border:0.1em solid #FFFFFF;margin:1em 0.3em 0.3em 0;border-radius:0.12em;box-sizing:border-box;-webkit-text-decoration:none;text-decoration:none;background-color:transparent;font-weight:300;color:#FFFFFF;text-align:center;-webkit-transition:all 0.2s;transition:all 0.2s;}.button.jsx-3325692028:hover{color:#000000;background-color:#FFFFFF;}.quote.jsx-3325692028{font-size:11px;}.error.jsx-3325692028{font-size:11px;}@media (max-width:800px){.indexForm.jsx-3325692028{width:40vw;font-size:12px;}.quote.jsx-3325692028{font-size:10px;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXNtYXJ0aW4vRG9jdW1lbnRzL0NvZGluZy9tYWQtbWVuLWJsb2cvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMkR3QixBQUd1QyxBQVlPLEFBYVosQUFHRCxBQUdRLEFBZU4sQUFJQyxBQUdBLEFBSUEsQUFJSSxXQUhBLENBN0J2QixDQUhBLENBcUI2QixDQUk3QixBQUdBLEFBUUksR0E5RHlCLEdBZ0NKLEdBaENZLENBYWYsQ0E4Q2xCLEtBMURXLFFBK0NmLEdBOUNnQixBQStCRyxDQW5CRixXQVhVLEVBWVYsQ0FtQmMsb0JBOUJkLE9BK0JZLHlCQUNKLHFCQXBCRSxBQXFCQSxxQkFoQ0EsQ0FpQ0Ysa0RBQ1EsMkJBdEJWLEVBdUJILGdCQUNGLEdBbkNLLFdBb0NELGtCQUNHLDJDQXpCQyxLQTBCMUIsZ0JBckNzQyxpQ0FDYix3QkFXUyw2RUFUbEMsc0NBVWdCLFlBQ0QsV0FFZiIsImZpbGUiOiIvVXNlcnMvYW5kcmVzbWFydGluL0RvY3VtZW50cy9Db2RpbmcvbWFkLW1lbi1ibG9nL3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRm9ybSB9IGZyb20gXCJyZWFjdC1ob29rLWZvcm1cIjtcbmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcblxuY29uc3QgQ2hvb3NlID0gKCkgPT4ge1xuXG4gICAgY29uc3QgW3Nob3csIHNldFNob3ddID0gdXNlU3RhdGUoXCJcIilcbiAgICBjb25zdCB7IHJlZ2lzdGVyLCBoYW5kbGVTdWJtaXQsIGVycm9ycyB9ID0gdXNlRm9ybSgpO1xuXG4gICAgY29uc3Qgb25TdWJtaXQgPSBhc3luYyBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICBhd2FpdCBzZXRTaG93KGRhdGEubmFtZSlcbiAgICAgICAgY29uc29sZS5sb2coc2hvdylcblxuICAgIH1cblxuICAgIGNvbnN0IFBvc3RMaW5rID0gcHJvcHMgPT4gKFxuICAgICAgICA8TGluayBocmVmPXtcIi9baWRdXCJ9IGFzPXtgLyR7cHJvcHMuaWR9YH0+XG4gICAgICAgICAgICA8YT5MZXQncyBnbyE8L2E+XG4gICAgICAgIDwvTGluaz5cbiAgICApO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbmRleENvbnRhaW5lclwiPlxuICAgICAgICAgICAgPEhlYWQ+XG4gICAgICAgICAgICAgICAgPGxpbmsgaHJlZj1cImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9TWFucm9wZTp3Z2h0QDMwMFwiIHJlbD1cInN0eWxlc2hlZXRcIiAvPlxuICAgICAgICAgICAgPC9IZWFkPlxuICAgICAgICAgICAgPGZvcm0gY2xhc3NOYW1lPVwiaW5kZXhGb3JtXCIgb25TdWJtaXQ9e2hhbmRsZVN1Ym1pdChvblN1Ym1pdCl9ID5cbiAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIFBpY2sgYSBzaG93OlxuICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImlucHV0XCJcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIiBuYW1lPVwibmFtZVwiXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiTWFkIE1lbiwgVGhlIFdpcmUuLi5cIlxuICAgICAgICAgICAgICAgICAgICByZWY9e3JlZ2lzdGVyKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGU6IGFzeW5jIHZhbHVlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zaW5nbGVzZWFyY2gvc2hvd3M/cT0ke3ZhbHVlfWApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLm5hbWUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLm5hbWUubGVuZ3RoID4gMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFNob3coXCJcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxwPkRvbid0IGJlIHNpbGx5ITwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAge2Vycm9ycy5uYW1lICYmIDxwIGNsYXNzTmFtZT1cImVycm9yXCI+RG9uJ3QgYmUgc2lsbHkhIFRoYXQncyBub3QgYSBzaG93Li4uPC9wPn1cbiAgICAgICAgICAgICAgICA8ZGl2PntzaG93ID8gPGRpdiAvPiA6IDxpbnB1dCBjbGFzc05hbWU9XCJidXR0b25cIiB0eXBlPVwic3VibWl0XCIgdmFsdWU9XCJJJ20gcmVhZHlcIiAvPn08L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGtleT17c2hvd30+XG4gICAgICAgICAgICAgICAgICAgIHtzaG93Lmxlbmd0aCA+IDAgPyA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaW5rXCI+PFBvc3RMaW5rIGlkPXtzaG93fSAvPjwvZGl2PiA8cCBjbGFzc05hbWU9XCJxdW90ZVwiPlwiV2lsZCBUaG91Z2h0c1wiIC0gRGogS2hhbGVkLCAyMDE3PC9wPjwvZGl2PiA6IDxwPlBsZWFzZSE8L3A+fVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9mb3JtPlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIC5pbmRleENvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgdG9wOiAwOyBsZWZ0OiAwO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsgXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJ01hbnJvcGUnLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMC40cHg7ICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5pbmRleEZvcm0ge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzNDN0RFO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA2dmg7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyBcbiAgICAgICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgICAgICAgICAganVzZml0eS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDM1dmg7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyMHZ3O1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaW5wdXQge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuaW5kZXhGb3JtID4gKiB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMTBweDtcbiAgICAgICAgICAgICAgICB9ICAgICAgIFxuICAgICAgICAgICAgICAgIC5idXR0b24ge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICAgICAg4oCDcGFkZGluZzowLjM1ZW0gMS4yZW07XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgICAgICAgICAgICAg4oCDYm9yZGVyOjAuMWVtIHNvbGlkICNGRkZGRkY7XG4gICAgICAgICAgICAgICAgICAgIOKAg21hcmdpbjoxZW0gMC4zZW0gMC4zZW0gMDtcbiAgICAgICAgICAgICAgICAgICAg4oCDYm9yZGVyLXJhZGl1czowLjEyZW07XG4gICAgICAgICAgICAgICAgICAgIOKAg2JveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgICAgICAgICAgIOKAg3RleHQtZGVjb3JhdGlvbjpub25lO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICAgICAg4oCDZm9udC13ZWlnaHQ6MzAwO1xuICAgICAgICAgICAgICAgICAgICDigINjb2xvcjojRkZGRkZGO1xuICAgICAgICAgICAgICAgICAgICDigIN0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAg4oCDdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5idXR0b246aG92ZXJ7XG4gICAgICAgICAgICAgICAgICAgIOKAg2NvbG9yOiMwMDAwMDA7XG4gICAgICAgICAgICAgICAgICAgIOKAg2JhY2tncm91bmQtY29sb3I6I0ZGRkZGRjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnF1b3RlIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMXB4O1xuICAgICAgICAgICAgICAgIH0gICBcbiAgICAgICAgICAgICAgICAuZXJyb3Ige1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDExcHg7XG4gICAgICAgICAgICAgICAgfSAgICAgXG4gICAgICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KXtcbiAgICAgICAgICAgICAgICAgICAgLmluZGV4Rm9ybSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNDB2dztcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAucXVvdGUge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBgfVxuICAgICAgICAgICAgPC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBDaG9vc2UiXX0= */\\n/*@ sourceURL=/Users/andresmartin/Documents/Coding/mad-men-blog/pages/index.js */\"));\n};\n\nexport default Choose;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/index.js"],"names":["useForm","useState","Link","fetch","Head","React","Choose","show","setShow","register","handleSubmit","errors","onSubmit","data","name","console","log","PostLink","props","id","required","validate","value","res","ok","json","length"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Head from 'next/head'\nimport React from \"react\"\n\nconst Choose = () => {\n\n    const [show, setShow] = useState(\"\")\n    const { register, handleSubmit, errors } = useForm();\n\n    const onSubmit = async function (data) {\n        await setShow(data.name)\n        console.log(show)\n\n    }\n\n    const PostLink = props => (\n        <Link href={\"/[id]\"} as={`/${props.id}`}>\n            <a>Let's go!</a>\n        </Link>\n    );\n\n    return (\n        <div className=\"indexContainer\">\n            <Head>\n                <link href=\"https://fonts.googleapis.com/css2?family=Manrope:wght@300\" rel=\"stylesheet\" />\n            </Head>\n            <form className=\"indexForm\" onSubmit={handleSubmit(onSubmit)} >\n                <label>\n                    Pick a show:\n                </label>\n                <input\n                    className=\"input\"\n                    type=\"text\" name=\"name\"\n                    placeholder=\"Mad Men, The Wire...\"\n                    ref={register({\n                        required: true,\n                        validate: async value => {\n                            const res = await fetch(`https://api.tvmaze.com/singlesearch/shows?q=${value}`)\n                            if (res.ok) {\n                                const data = await res.json()\n                                console.log(data.name)\n                                return data.name.length > 0\n                            } else {\n                                setShow(\"\")\n                                return <p>Don't be silly!</p>\n                            }\n                        }\n                    })}\n                />\n                {errors.name && <p className=\"error\">Don't be silly! That's not a show...</p>}\n                <div>{show ? <div /> : <input className=\"button\" type=\"submit\" value=\"I'm ready\" />}</div>\n                <div key={show}>\n                    {show.length > 0 ? <div>\n                        <div className=\"link\"><PostLink id={show} /></div> <p className=\"quote\">\"Wild Thoughts\" - Dj Khaled, 2017</p></div> : <p>Please!</p>}\n                </div>\n            </form>\n            <style jsx>{`\n                .indexContainer {\n                    position: absolute; top: 0; left: 0;\n                    width: 100%; \n                    height: 100%;\n                    background-color: white;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    font-family: 'Manrope', sans-serif;\n                    letter-spacing: 0.4px;  \n                    \n                }\n                .indexForm {\n                    background-color: #33C7DE;\n                    margin-bottom: 6vh;\n                    padding: 10px;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center; \n                    flex-direction: column;\n                    jusfity-content: space-between;\n                    height: 35vh;\n                    width: 20vw;\n                    \n                }\n                input {\n                    padding: 10px;\n                }\n                .indexForm > * {\n                    margin: 10px;\n                }       \n                .button {\n                    display:inline-block;\n                     padding:0.35em 1.2em;\n                    font-size: 13px;\n                     border:0.1em solid #FFFFFF;\n                     margin:1em 0.3em 0.3em 0;\n                     border-radius:0.12em;\n                     box-sizing: border-box;\n                     text-decoration:none;\n                    background-color: transparent;\n                     font-weight:300;\n                     color:#FFFFFF;\n                     text-align:center;\n                     transition: all 0.2s;\n                }\n                .button:hover{\n                     color:#000000;\n                     background-color:#FFFFFF;\n                }\n                .quote {\n                    font-size: 11px;\n                }   \n                .error {\n                    font-size: 11px;\n                }     \n                @media (max-width: 800px){\n                    .indexForm {\n                        width: 40vw;\n                        font-size: 12px;\n                    }\n                    .quote {\n                        font-size: 10px;\n                    }\n                }  \n                \n            `}\n            </style>\n        </div>\n    )\n}\n\nexport default Choose"]},"metadata":{},"sourceType":"module"}