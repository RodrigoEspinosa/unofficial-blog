{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Episodes = function Episodes(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, \"Seasons!\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, props.seasons.map(function (season) {\n    return __jsx(\"li\", {\n      key: season.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"/season/[id]\",\n      as: \"/season/\".concat(season.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }\n    }, \"Season \", season.number, season.premiereData ? \"........\" + season.premiereDate - season.endDate : __jsx(\"noimg\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 125\n      }\n    }))));\n  })));\n};\n\nEpisodes.getInitialProps = function _callee(context) {\n  var id, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id, \"/seasons\")));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            seasons: data.map(function (entry) {\n              return entry;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Episodes;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/seasons/[id].js"],"names":["Link","Layout","fetch","Episodes","props","seasons","map","season","id","number","premiereData","premiereDate","endDate","getInitialProps","context","query","res","json","data","entry"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,UAAAC,MAAM;AAAA,WACrB;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAA0B,MAAA,EAAE,oBAAaD,MAAM,CAACC,EAApB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWD,MAAM,CAACE,MAAlB,EAA0BF,MAAM,CAACG,YAAP,GAAsB,aAAaH,MAAM,CAACI,YAApB,GAAmCJ,MAAM,CAACK,OAAhE,GAA0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApG,CADJ,CADJ,CADqB;AAAA,GAAxB,CADL,CAFJ,CADkB;AAAA,CAAtB;;AAgBAT,QAAQ,CAACU,eAAT,GAA2B,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACfN,UAAAA,EADe,GACRM,OAAO,CAACC,KADA,CACfP,EADe;AAAA;AAAA,2CAELN,KAAK,wCAAiCM,EAAjC,cAFA;;AAAA;AAEjBQ,UAAAA,GAFiB;AAAA;AAAA,2CAGJA,GAAG,CAACC,IAAJ,EAHI;;AAAA;AAGjBC,UAAAA,IAHiB;AAAA,2CAKhB;AACHb,YAAAA,OAAO,EAAEa,IAAI,CAACZ,GAAL,CAAS,UAAAa,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAAd;AADN,WALgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAUA,eAAehB,QAAf","sourcesContent":["import Link from 'next/link';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Episodes = props => (\n    <Layout>\n        <h1>Seasons!</h1>\n        <ul>\n            {props.seasons.map(season => (\n                <li key={season.id} >\n                    <Link href=\"/season/[id]\" as={`/season/${season.id}`}>\n                        <a>Season {season.number}{season.premiereData ? \"........\" + season.premiereDate - season.endDate : <noimg />}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n\n    </Layout>\n);\n\nEpisodes.getInitialProps = async function (context) {\n    const { id } = context.query\n    const res = await fetch(`https://api.tvmaze.com/shows/${id}/seasons`);\n    const data = await res.json();\n\n    return {\n        seasons: data.map(entry => entry)\n    };\n};\n\nexport default Episodes"]},"metadata":{},"sourceType":"module"}