{"ast":null,"code":"var _jsxFileName = \"/Users/andresmartin/Documents/Coding/mad-men-blog/pages/cast/person/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Person = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: \"jsx-3292060549\" + \" \" + \"container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}, __jsx(\"div\", {\n  className: \"jsx-3292060549\" + \" \" + \"personInfo\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }\n}, __jsx(\"h1\", {\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 17\n  }\n}, props.personData.name), __jsx(\"div\", {\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 17\n  }\n}, \" \", props.personData.birthday ? __jsx(\"h3\", {\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 52\n  }\n}, \"Born: \", props.personData.birthday, \", \", props.personData.country.name) : __jsx(\"noimg\", {\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 130\n  }\n}), \" \"), __jsx(\"div\", {\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 17\n  }\n}, props.personData.deathday ? __jsx(\"h3\", {\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 51\n  }\n}, \"Dead: \", props.personData.deathday) : __jsx(\"noimg\", {\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 96\n  }\n}))), __jsx(\"div\", {\n  className: \"jsx-3292060549\" + \" \" + \"img\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }\n}, props.personData.image ? __jsx(\"img\", {\n  src: props.personData.image.original,\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 43\n  }\n}) : __jsx(\"noimg\", {\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 91\n  }\n})), __jsx(\"ul\", {\n  className: \"jsx-3292060549\" + \" \" + \"list\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }\n}, props.actorData.map(show => __jsx(\"li\", {\n  key: show.id,\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 21\n  }\n}, __jsx(\"div\", {\n  className: \"jsx-3292060549\" + \" \" + \"showInfo\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 25\n  }\n}, __jsx(\"h3\", {\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 29\n  }\n}, show._embedded.show.name, \" (\", show._embedded.show.network ? show._embedded.show.network.name : show._embedded.show.webChannel.name, \")\"), __jsx(\"h4\", {\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 29\n  }\n}, show._embedded.show.genres.join(\" / \")), __jsx(\"p\", {\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 29\n  }\n}, show._embedded.show.summary.substring(3, show._embedded.show.summary.length - 4).replace(/<[^>]*>?/gm, ''))), __jsx(\"div\", {\n  className: \"jsx-3292060549\" + \" \" + \"showImg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 25\n  }\n}, show._embedded.show.image ? __jsx(\"img\", {\n  src: show._embedded.show.image.original,\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 79\n  }\n}) : __jsx(\"noimg\", {\n  className: \"jsx-3292060549\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 130\n  }\n})))))), __jsx(_JSXStyle, {\n  id: \"3292060549\",\n  __self: this\n}, \".container.jsx-3292060549{padding-top:25px;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch;-webkit-align-content:stretch;-ms-flex-line-pack:stretch;align-content:stretch;display:grid;grid-template-columns:20vw 20vw 20vw 20vw;grid-template-rows:35vh 40vh 20vh 19vh;margin-left:6%;margin-right:6%;}.personInfo.jsx-3292060549{grid-column-start:1;grid-column-end:3;grid-row-start:1;grid-row-end:2;padding:10%;width:40vw;}.img.jsx-3292060549{grid-column-start:3;grid-column-end:5;grid-row-start:1;grid-row-end:2;justify-self:center;margin-top:20px;}.img.jsx-3292060549>img.jsx-3292060549{object-fit:cover;max-height:100%;}.list.jsx-3292060549{grid-column-start:1;grid-column-end:5;grid-row-start:2;grid-row-end:5;}li.jsx-3292060549{list-style-type:none;height:30vh;padding-left:2vw;border:1px solid #DDD;}.showImg.jsx-3292060549>img.jsx-3292060549{object-fit:cover;max-height:30vh;float:right;}.showInfo.jsx-3292060549{float:left;width:60vw;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmRyZXNtYXJ0aW4vRG9jdW1lbnRzL0NvZGluZy9tYWQtbWVuLWJsb2cvcGFnZXMvY2FzdC9wZXJzb24vW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQ29CLEFBRzhCLEFBVUcsQUFTQSxBQVFILEFBSUcsQUFNQyxBQU1KLEFBS04sV0FFaEIsTUFqRDZCLEFBMkJULEFBZ0JBLEdBakNHLEFBU0ksQUFZSixDQU1GLENBWXBCLFdBckJKLEFBVTZCLEFBTVYsS0FqQ00sQUFTSSxBQVlKLE9BYXpCLEtBTmtDLEtBM0JYLEFBU0ksQUFZSixlQXBCSCxBQVNZLEFBWTVCLEVBTUEsVUExQmUsUUFTUyxHQVB2QixhQVFELGNBdkIwQiwrRUFDVCxhQUM4QiwwQ0FDSix1Q0FDeEIsZUFDQyxnQkFDbkIiLCJmaWxlIjoiL1VzZXJzL2FuZHJlc21hcnRpbi9Eb2N1bWVudHMvQ29kaW5nL21hZC1tZW4tYmxvZy9wYWdlcy9jYXN0L3BlcnNvbi9baWRdLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL015TGF5b3V0JztcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcblxuY29uc3QgUGVyc29uID0gcHJvcHMgPT4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGVyc29uSW5mb1wiPlxuICAgICAgICAgICAgICAgIDxoMT57cHJvcHMucGVyc29uRGF0YS5uYW1lfTwvaDE+XG4gICAgICAgICAgICAgICAgPGRpdj4ge3Byb3BzLnBlcnNvbkRhdGEuYmlydGhkYXkgPyA8aDM+Qm9ybjoge3Byb3BzLnBlcnNvbkRhdGEuYmlydGhkYXl9LCB7cHJvcHMucGVyc29uRGF0YS5jb3VudHJ5Lm5hbWV9PC9oMz4gOiA8bm9pbWcgLz59IDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXY+e3Byb3BzLnBlcnNvbkRhdGEuZGVhdGhkYXkgPyA8aDM+RGVhZDoge3Byb3BzLnBlcnNvbkRhdGEuZGVhdGhkYXl9PC9oMz4gOiA8bm9pbWcgLz59PC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImltZ1wiPlxuICAgICAgICAgICAgICAgIHtwcm9wcy5wZXJzb25EYXRhLmltYWdlID8gPGltZyBzcmM9e3Byb3BzLnBlcnNvbkRhdGEuaW1hZ2Uub3JpZ2luYWx9IC8+IDogPG5vaW1nIC8+fVxuICAgICAgICAgICAgPC9kaXY+XG5cblxuICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cImxpc3RcIj5cbiAgICAgICAgICAgICAgICB7cHJvcHMuYWN0b3JEYXRhLm1hcChzaG93ID0+IChcbiAgICAgICAgICAgICAgICAgICAgPGxpIGtleT17c2hvdy5pZH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNob3dJbmZvXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPntzaG93Ll9lbWJlZGRlZC5zaG93Lm5hbWV9ICh7c2hvdy5fZW1iZWRkZWQuc2hvdy5uZXR3b3JrID8gc2hvdy5fZW1iZWRkZWQuc2hvdy5uZXR3b3JrLm5hbWUgOiBzaG93Ll9lbWJlZGRlZC5zaG93LndlYkNoYW5uZWwubmFtZX0pPC9oMz5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND57c2hvdy5fZW1iZWRkZWQuc2hvdy5nZW5yZXMuam9pbihcIiAvIFwiKX08L2g0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPntzaG93Ll9lbWJlZGRlZC5zaG93LnN1bW1hcnkuc3Vic3RyaW5nKDMsIHNob3cuX2VtYmVkZGVkLnNob3cuc3VtbWFyeS5sZW5ndGggLSA0KS5yZXBsYWNlKC88W14+XSo+Py9nbSwgJycpfTwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzaG93SW1nXCI+e3Nob3cuX2VtYmVkZGVkLnNob3cuaW1hZ2UgPyA8aW1nIHNyYz17c2hvdy5fZW1iZWRkZWQuc2hvdy5pbWFnZS5vcmlnaW5hbH0gLz4gOiA8bm9pbWcgLz59PC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvdWw+XG5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmNvbnRhaW5lciB7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogMjVweDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3RyZXRjaDsgICBcbiAgICAgICAgICAgIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2g7ICAgICBcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDIwdncgMjB2dyAyMHZ3IDIwdncgO1xuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAzNXZoIDQwdmggMjB2aCAxOXZoO1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDYlOyBcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNiU7ICAgICAgXG4gICAgICAgICB9XG4gICAgICAgICAucGVyc29uSW5mbyB7XG4gICAgICAgICAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcbiAgICAgICAgICAgIGdyaWQtY29sdW1uLWVuZDogMztcbiAgICAgICAgICAgIGdyaWQtcm93LXN0YXJ0OiAxO1xuICAgICAgICAgICAgZ3JpZC1yb3ctZW5kOiAyO1xuICAgICAgICAgICAgcGFkZGluZzogMTAlO1xuICAgICAgICAgICAgd2lkdGg6IDQwdnc7XG5cbiAgICAgICAgIH1cbiAgICAgICAgIC5pbWcge1xuICAgICAgICAgICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDM7XG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW4tZW5kOiA1O1xuICAgICAgICAgICAgICAgIGdyaWQtcm93LXN0YXJ0OiAxO1xuICAgICAgICAgICAgICAgIGdyaWQtcm93LWVuZDogMjtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgICAgICB9XG4gICAgICAgIC5pbWcgPiBpbWcge1xuICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgIG1heC1oZWlnaHQ6IDEwMCU7ICAgICAgICAgXG4gICAgfVxuICAgICAgICAgLmxpc3Qge1xuICAgICAgICAgICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XG4gICAgICAgICAgICBncmlkLWNvbHVtbi1lbmQ6IDU7XG4gICAgICAgICAgICBncmlkLXJvdy1zdGFydDogMjtcbiAgICAgICAgICAgIGdyaWQtcm93LWVuZDogNTtcbiAgICAgICAgfVxuICAgICAgICBsaSB7XG4gICAgICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAzMHZoO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMnZ3O1xuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNEREQ7XG4gICAgICAgIH1cbiAgICAgICAgLnNob3dJbWcgPiBpbWcge1xuICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgIG1heC1oZWlnaHQ6IDMwdmg7IFxuICAgICAgICAgICBmbG9hdDogcmlnaHQ7ICAgICAgXG4gICAgfVxuICAgICAgICAuc2hvd0luZm8ge1xuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICB3aWR0aDogNjB2d1xuICAgICAgICB9XG4gICAgICAgXG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4pO1xuXG5QZXJzb24uZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICBjb25zdCB7IGlkIH0gPSBjb250ZXh0LnF1ZXJ5O1xuXG4gICAgY29uc3QgW3BlcnNvbkRhdGEsIGFjdG9yRGF0YV0gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS50dm1hemUuY29tL3Blb3BsZS8ke2lkfWApLnRoZW4ociA9PiByLmpzb24oKSksXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS50dm1hemUuY29tL3Blb3BsZS8ke2lkfS9jYXN0Y3JlZGl0cz9lbWJlZD1zaG93YCkudGhlbihyID0+IHIuanNvbigpKSxcblxuICAgIF0pXG5cbiAgICByZXR1cm4ge1xuICAgICAgICBwZXJzb25EYXRhLCBhY3RvckRhdGEsXG5cbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUGVyc29uOyJdfQ== */\\n/*@ sourceURL=/Users/andresmartin/Documents/Coding/mad-men-blog/pages/cast/person/[id].js */\"));\n\nPerson.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const [personData, actorData] = await Promise.all([fetch(`https://api.tvmaze.com/people/${id}`).then(r => r.json()), fetch(`https://api.tvmaze.com/people/${id}/castcredits?embed=show`).then(r => r.json())]);\n  return {\n    personData,\n    actorData\n  };\n};\n\nexport default Person;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/mad-men-blog/pages/cast/person/[id].js"],"names":["Layout","fetch","Link","Person","props","personData","name","birthday","country","deathday","image","original","actorData","map","show","id","_embedded","network","webChannel","genres","join","summary","substring","length","replace","getInitialProps","context","query","Promise","all","then","r","json"],"mappings":"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","sourcesContent":["import Layout from '../../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Person = props => (\n    <Layout>\n        <div className=\"container\">\n\n            <div className=\"personInfo\">\n                <h1>{props.personData.name}</h1>\n                <div> {props.personData.birthday ? <h3>Born: {props.personData.birthday}, {props.personData.country.name}</h3> : <noimg />} </div>\n                <div>{props.personData.deathday ? <h3>Dead: {props.personData.deathday}</h3> : <noimg />}</div>\n            </div>\n\n\n            <div className=\"img\">\n                {props.personData.image ? <img src={props.personData.image.original} /> : <noimg />}\n            </div>\n\n\n            <ul className=\"list\">\n                {props.actorData.map(show => (\n                    <li key={show.id}>\n                        <div className=\"showInfo\">\n                            <h3>{show._embedded.show.name} ({show._embedded.show.network ? show._embedded.show.network.name : show._embedded.show.webChannel.name})</h3>\n\n                            <h4>{show._embedded.show.genres.join(\" / \")}</h4>\n                            <p>{show._embedded.show.summary.substring(3, show._embedded.show.summary.length - 4).replace(/<[^>]*>?/gm, '')}</p>\n                        </div>\n                        <div className=\"showImg\">{show._embedded.show.image ? <img src={show._embedded.show.image.original} /> : <noimg />}</div>\n\n                    </li>\n                ))}\n            </ul>\n\n        </div>\n        <style jsx>{`\n        .container {\n            padding-top: 25px;\n            justify-content: stretch;   \n            align-content: stretch;     \n            display: grid;\n            grid-template-columns: 20vw 20vw 20vw 20vw ;\n            grid-template-rows: 35vh 40vh 20vh 19vh;\n            margin-left: 6%; \n            margin-right: 6%;      \n         }\n         .personInfo {\n            grid-column-start: 1;\n            grid-column-end: 3;\n            grid-row-start: 1;\n            grid-row-end: 2;\n            padding: 10%;\n            width: 40vw;\n\n         }\n         .img {\n            grid-column-start: 3;\n                grid-column-end: 5;\n                grid-row-start: 1;\n                grid-row-end: 2;\n                justify-self: center;\n                margin-top: 20px;\n        }\n        .img > img {\n            object-fit: cover;\n           max-height: 100%;         \n    }\n         .list {\n            grid-column-start: 1;\n            grid-column-end: 5;\n            grid-row-start: 2;\n            grid-row-end: 5;\n        }\n        li {\n            list-style-type: none;\n                height: 30vh;\n                padding-left: 2vw;\n                border: 1px solid #DDD;\n        }\n        .showImg > img {\n            object-fit: cover;\n           max-height: 30vh; \n           float: right;      \n    }\n        .showInfo {\n            float: left;\n            width: 60vw\n        }\n       \n      `}</style>\n    </Layout>\n);\n\nPerson.getInitialProps = async function (context) {\n    const { id } = context.query;\n\n    const [personData, actorData] = await Promise.all([\n        fetch(`https://api.tvmaze.com/people/${id}`).then(r => r.json()),\n        fetch(`https://api.tvmaze.com/people/${id}/castcredits?embed=show`).then(r => r.json()),\n\n    ])\n\n    return {\n        personData, actorData,\n\n    };\n};\n\nexport default Person;"]},"metadata":{},"sourceType":"module"}