{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nvar Session = function Session(props) {\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"jsx-2620781324\" + \" \" + \"container\"\n  }, __jsx(\"ul\", {\n    className: \"jsx-2620781324\" + \" \" + \"list\"\n  }, __jsx(\"h2\", {\n    className: \"jsx-2620781324\" + \" \" + \"title\"\n  }, \"Season \", props.completeSeason[0].season), props.completeSeason.map(function (episode) {\n    return __jsx(\"li\", {\n      key: episode.id,\n      className: \"jsx-2620781324\"\n    }, __jsx(Link, {\n      href: \"/season/episode/[id]\",\n      as: \"/season/episode/\".concat(episode.id)\n    }, __jsx(\"a\", {\n      className: \"jsx-2620781324\"\n    }, \"Episode \", episode.number, \"........\", episode.name)));\n  })), __jsx(\"div\", {\n    className: \"jsx-2620781324\" + \" \" + \"img\"\n  }, props.completeSeason[0].image ? __jsx(\"img\", {\n    src: props.completeSeason[0].image.original,\n    className: \"jsx-2620781324\"\n  }) : __jsx(\"noimg\", {\n    className: \"jsx-2620781324\"\n  }))), __jsx(_JSXStyle, {\n    id: \"2620781324\"\n  }, [\".list.jsx-2620781324{grid-column-start:1;grid-column-end:3;grid-row-start:1;grid-row-end:5;margin:0;padding-top:5vh;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;}\", \"li.jsx-2620781324{list-style-type:none;height:13vh;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}\", \".img.jsx-2620781324{grid-column-start:3;grid-column-end:5;grid-row-start:1;grid-row-end:5;justify-self:center;margin-top:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\", \".img.jsx-2620781324>img.jsx-2620781324{object-fit:cover;max-height:100%;max-width:100%;}\", \".container.jsx-2620781324{padding-top:25px;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch;-webkit-align-content:stretch;-ms-flex-line-pack:stretch;align-content:stretch;display:grid;grid-template-columns:20vw 20vw 20vw 20vw;grid-template-rows:10vh 40vh 20vh 19vh;margin-left:6%;margin-right:6%;}\", \"@media (max-width:800px){Layout.jsx-2620781324{font-size:10px;}.container.jsx-2620781324{padding-top:15px;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch;-webkit-align-content:stretch;-ms-flex-line-pack:stretch;align-content:stretch;display:grid;grid-template-columns:20vw 20vw 20vw 20vw;grid-template-rows:15vh 15vh 20vh 19vh;margin-left:9%;margin-right:9%;font-size:9px;}.img.jsx-2620781324{grid-column-start:1;grid-column-end:5;grid-row-start:1;grid-row-end:3;justify-self:center;padding-top:2vh;}.summary.jsx-2620781324{grid-column-start:1;grid-column-end:5;grid-row-start:3;grid-row-end:4;}.list.jsx-2620781324{grid-column-start:1;grid-column-end:5;grid-row-start:3;grid-row-end:5;padding:0;}li.jsx-2620781324{list-style-type:none;height:4vh;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}}\"]));\n};\n\nSession.getInitialProps = function _callee(context) {\n  var id, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/seasons/\".concat(id, \"/episodes\")));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            completeSeason: data.map(function (entry) {\n              return entry;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Session;","map":null,"metadata":{},"sourceType":"module"}