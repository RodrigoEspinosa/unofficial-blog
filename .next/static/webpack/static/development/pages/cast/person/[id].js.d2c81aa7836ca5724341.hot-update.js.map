{"version":3,"file":"static/webpack/static/development/pages/cast/person/[id].js.d2c81aa7836ca5724341.hot-update.js","sources":["webpack:///./pages/cast/person/.js"],"sourcesContent":["import Layout from '../../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Person = props => (\n    <Layout>\n        <div className=\"container\">\n\n            <div className=\"personInfo\">\n                <h1>{props.personData.name}</h1>\n                <div> {props.personData.birthday ? <h3>Born: {props.personData.birthday}, {props.personData.country.name}</h3> : <div />} </div>\n                <div>{props.personData.deathday ? <h3>Dead: {props.personData.deathday}</h3> : <div />}</div>\n            </div>\n\n\n            <div className=\"img\">\n                {props.personData.image ? <img src={props.personData.image.original} /> : <div />}\n            </div>\n\n\n            <ul className=\"list\">\n                {props.actorData.map(show => (\n                    <li key={show._embedded.show.id}>\n                        <div className=\"showInfo\">\n                            <h3>{show._embedded.show.name} ({show._embedded.show.network ? show._embedded.show.network.name : show._embedded.show.webChannel.name})</h3>\n\n                            <h4>{show._embedded.show.genres.join(\" / \")}</h4>\n                            <p>{show._embedded.show.summary.substring(3, show._embedded.show.summary.length - 4).replace(/<[^>]*>?/gm, '')}</p>\n                        </div>\n                        <div className=\"showImg\">{show._embedded.show.image ? <img src={show._embedded.show.image.original} /> : <div />}</div>\n\n                    </li>\n                ))}\n            </ul>\n        </div>\n        <style jsx>{`\n        .container {\n            padding-top: 25px;\n            justify-content: stretch;   \n            align-content: stretch;     \n            display: grid;\n            grid-template-columns: 20vw 20vw 20vw 20vw ;\n            grid-template-rows: 35vh 40vh 20vh 19vh;\n            margin-left: 6%; \n            margin-right: 6%;      \n         }\n         .personInfo {\n            grid-column-start: 1;\n            grid-column-end: 3;\n            grid-row-start: 1;\n            grid-row-end: 2;\n            padding: 10%;\n            width: 40vw;\n         }\n         .img {\n            grid-column-start: 3;\n                grid-column-end: 5;\n                grid-row-start: 1;\n                grid-row-end: 2;\n                justify-self: right;\n                margin-top: 20px;\n        }\n        .img img {\n            object-fit: cover;\n           max-height: 100%;         \n    }\n         .list {\n            grid-column-start: 1;\n            grid-column-end: 5;\n            grid-row-start: 2;\n            grid-row-end: 5;\n        }\n        li {\n            list-style-type: none;\n            height: 50vh; \n                padding-left: 2vw;\n                border: 1px solid #DDD;\n                margin-right: -2.5vw;\n        }\n        .showImg img {\n            object-fit: cover;\n           max-height: 50vh; \n           float: right;      \n    }\n        .showInfo {\n            float: left;\n            width: 55vw\n        }\n        @media (max-width: 800px){\n            .characterImg img {\n                object-fit: cover;\n               max-height: 5vh;         \n        }\n            .container {\n                padding-top: 15px;\n                justify-content: stretch;   \n                align-content: stretch;     \n                display: grid;\n                grid-template-columns: 20vw 20vw 20vw 20vw ;\n                grid-template-rows: 18vh 25vh 20vh 19vh;\n                margin-left: 9%; \n                margin-right: 9%;\n                font-size: 7px;     \n             }\n             .img {\n                grid-column-start: 1;\n                grid-column-end: 5;\n                grid-row-start: 1;\n                grid-row-end: 2;\n    \n            }\n            .list {\n                grid-column-start: 1;\n                grid-column-end: 5;\n                grid-row-start: 2;\n                grid-row-end: 5;\n                margin-left: -9vw;    \n                margin-right: -1vw;\n            }\n            li {\n                list-style-type: none;\n                height: 30vh;\n                text-align: left;\n                margin-bottom: 25px;\n            }\n            .showInfo {\n                width: 22vh\n            }\n            .showImg img {\n                max-height: 30vh; \n            }\n          }   \n      `}</style>\n    </Layout>\n);\n\nPerson.getInitialProps = async function (context) {\n    const { id } = context.query;\n\n    const [personData, actorData] = await Promise.all([\n        fetch(`https://api.tvmaze.com/people/${id}`).then(r => r.json()),\n        fetch(`https://api.tvmaze.com/people/${id}/castcredits?embed=show`).then(r => r.json()),\n\n    ])\n\n    return {\n        personData, actorData,\n\n    };\n};\n\nexport default Person;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAhBA;AAAA;AAAA;AADA;AACA;AAmIA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AANA;AAAA;AAAA;AAGA;AAAA;AAHA;AAUA;AAAA;AADA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;;;;A","sourceRoot":""}